@using DragonSpark.Compose
@using DragonSpark.Presentation
@using DragonSpark.Presentation.Components
@using Syncfusion.Blazor.Buttons
@using System.Linq.Expressions

<div class="d-flex align-items-center mb-3">
    <SfSwitch TChecked="bool" id="@Identifier" Checked="@Value" CheckedChanged="@OnChanged" CheckedExpression="@ValueExpression" CssClass="mr-3" />
    <h3 class="mb-0"><label class="mb-0" for="@Identifier" style="cursor: pointer">@Label</label></h3>
</div>

@code {
    [Parameter]
    public string Label { get; set; } = "Enable";

    [Parameter]
    public bool Value { get; set; }

    [Parameter]
    public EventCallback<bool> ValueChanged { get; set; }

    [Parameter]
    public Expression<Func<bool>> ValueExpression { get; set; } = default!;

    [Parameter]
    public EventCallback Updated { get; set; }

    async Task OnChanged(bool parameter)
    {
        await ValueChanged.Invoke(Value = parameter);
        await Updated.Invoke().Await();
    }

    string Identifier { get; set; } = UniqueIdentifiers.Default.Get();

}
