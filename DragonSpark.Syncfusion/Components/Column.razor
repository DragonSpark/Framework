@typeparam T
@using Syncfusion.Blazor.Grids
@using System.Text.Json.Serialization

<GridColumn AutoFit="@AutoFit"
	AllowFiltering="@AllowFiltering"
	AllowSorting="@AllowSorting"
	Format="@Format"
	HeaderText="@HeaderText"
	Field="@Field"
	Width="@Width"
	FilterTemplate="@FilterTemplate"
	Template="@ActualTemplate"
    ClipMode="@ClipMode"
	Type="@Type"
	HeaderTextAlign="@HeaderTextAlign"
	TextAlign="@TextAlign"
	FilterSettings="@FilterSettings"
/>

@code {

	protected override void OnInitialized()
	{
		ActualTemplate = Template != null ? x => Template((T)x) : null;
		base.OnInitialized();
	}

	RenderFragment<object>? ActualTemplate { get; set; }

	[Parameter]
	public RenderFragment<T>? Template { get; set; }

	[Parameter]
	public bool AutoFit { get; set; }

	[Parameter]
	public bool AllowFiltering { get; set; } = true;

	[Parameter]
	public bool AllowSorting { get; set; } = true;

	[Parameter]
	public string Format { get; set; } = default!;

	[Parameter]
	public string Width { get; set; } = string.Empty;

	[Parameter]
	public string? HeaderText { get; set; }

	[Parameter]
	public string Field { get; set; } = string.Empty;

	[Parameter]
	public ColumnType Type { get; set; }

	[Parameter]
	public FilterSettings? FilterSettings { get; set; }

	[Parameter]
	public TextAlign HeaderTextAlign { get; set; } = TextAlign.Left;

	[Parameter]
	public TextAlign TextAlign { get; set; } = TextAlign.Left;

	[Parameter]
	public ClipMode ClipMode { get; set; } = ClipMode.Ellipsis;

    [Parameter]
    public RenderFragment<object> FilterTemplate { get; set; } = default!;
}
