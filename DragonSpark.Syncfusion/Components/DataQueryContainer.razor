@using BlazorPro.BlazorSize
@using DragonSpark.Application.Entities.Queries.Runtime
@using DragonSpark.Application.Entities.Queries.Runtime.Shape
@using DragonSpark.Application.Runtime.Operations
@using DragonSpark.Presentation.Components.Content.Templates
@using DragonSpark.Syncfusion.Queries

@typeparam T

@inherits DragonSpark.Presentation.Components.Content.Templates.ManyActiveContentTemplateComponentBase<IDataRequest>

<DragonSpark.Presentation.Components.State.ActivityReceiverContainer Context="_">
	<SyncfusionQueryContainer T="T" Content="@Content" Compose="@Compose" Pagers="@Pagers" Reporter="@Reporter"
	                          LoadingTemplate="@EmptyContentTemplate.Default"
	                          EmptyElementsTemplate="@EmptyElementsTemplate"
	                          NotFoundTemplate="@NotFoundTemplate"
	                          ExceptionTemplate="@ExceptionTemplate"
	                          >
		@if (HeaderTemplate is not null)
		{
			@HeaderTemplate
		}

		<DataQueryGrid T="T" Content="context"
		               FilterType="@FilterType"
		               ReportedType="@ReportedType"
		               Columns="@Columns"
		               AllowPaging="@AllowPaging"
		               AllowFiltering="@AllowFiltering"
		               AllowSorting="@AllowSorting"
					   LoadingTemplate="@LoadingTemplate"
					   CssClass="@CssClass"
		               Breakpoint="@Breakpoint"
		               PageSize="@PageSize"
		               @attributes="@AdditionalAttributes"
		>
			@if (ChildContentTemplate is not null)
			{
				@ChildContentTemplate
			}
		</DataQueryGrid>

		@if (FooterTemplate is not null)
		{
			@FooterTemplate
		}
	</SyncfusionQueryContainer>
</DragonSpark.Presentation.Components.State.ActivityReceiverContainer>

@code {
	[Parameter]
	public IQueries<T> Content {get; set; } = default!;

	[Parameter]
	public ICompose<T> Compose { get; set; } = SyncfusionCompose<T>.Default;

	[Parameter]
	public IPagers<T> Pagers { get; set; } = Pagers<T>.Default;

	[Parameter]
	public IReporter<IDataRequest>? Reporter { get; set; } = Queries.Reporter.Default;

	[Parameter]
	public Type? ReportedType { get; set; }

	[Parameter]
	public FilterType FilterType { get; set; } = FilterType.Excel;

	[Parameter]
	public RenderFragment Columns { get; set; } = default!;

	[Parameter]
	public RenderFragment? HeaderTemplate { get; set; }

	[Parameter]
	public RenderFragment? ChildContentTemplate { get; set; }

	[Parameter]
	public RenderFragment? FooterTemplate { get; set; }

	[Parameter]
	public bool AllowPaging { get; set; } = true;

	[Parameter]
	public bool AllowFiltering { get; set; } = true;

	[Parameter]
	public bool AllowSorting { get; set; } = true;

	[Parameter]
	public string Breakpoint { get; set; } = Breakpoints.SmallUp;

	[Parameter]
	public string CssClass { get; set; } = string.Empty;

	[Parameter]
	public ushort PageSize { get; set; } = 10;

	[Parameter(CaptureUnmatchedValues = true)]
	public Dictionary<string, object> AdditionalAttributes { get; set; } = default!;
}