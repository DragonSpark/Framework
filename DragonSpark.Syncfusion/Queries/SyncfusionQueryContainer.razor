@using DragonSpark.Application.Entities.Queries.Runtime
@using DragonSpark.Application.Entities.Queries.Runtime.Shape
@using DragonSpark.Presentation.Components.Content

@typeparam T

@inherits ManyActiveContentTemplateComponentBase<IDataRequest>

<QueryContentContainer
	Content="@Content"
	Compose="@Compose"
	Pagers="@Pagers"
	LoadingTemplate="@LoadingTemplate"
	EmptyElementsTemplate="@EmptyElementsTemplate"
	NotFoundTemplate="@NotFoundTemplate"
	ExceptionTemplate="@ExceptionTemplate"
	ReportedType="@ReportedType"
>
	@ChildContent(Requests.Get(context))
</QueryContentContainer>

@code {

	[Parameter]
	public IQueries<T>? Content { get; set; }

	[Parameter]
	public ICompose<T> Compose { get; set; } = SyncfusionCompose<T>.Default;

	[Parameter]
	public IPagers<T> Pagers { get; set; } = Pagers<T>.Default;

	[Parameter]
	public IDataRequests<T> Requests { get; set; } = DataRequests<T>.Default;

	[Parameter]
	public Type? ReportedType { get; set; }
}