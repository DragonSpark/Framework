@using DragonSpark.Application.AspNet.Entities.Queries.Runtime.Pagination
@using DragonSpark.Compose
@using DragonSpark.Presentation.Components.Content
@using DragonSpark.SyncfusionRendering.Components
@using Radzen

@typeparam T

@inherits DataRequestTemplateComponentBase

<ReportingContentView TIn="IDataRequest" TOut="IDataRequest"
	Content="@_subject"
	Reporter="@Reporter"
	LoadingTemplate="@LoadingTemplate"
	ExceptionTemplate="@ExceptionTemplate"
	NotFoundTemplate="@NotFoundTemplate"
    ChildContent="@ChildContent"
    />

@code {
    IDataRequest? _subject;

    [Parameter]
    public required IPages<T> Content { get; set; }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        var changed = parameters.DidParameterChange(nameof(Content), Content);
        await base.SetParametersAsync(parameters).Off();
        if (changed)
        {
            _subject = new ProcessRequest<T>(Content);
        }
    }
}