@using Microsoft.EntityFrameworkCore
@using JetBrains.Annotations
@typeparam TItem

@Fragment

@code
{
#nullable enable
    RenderFragment? Fragment { get; set; } = default!;

    protected override async Task OnParametersSetAsync()
    {
        Fragment ??= Content != null ?
                       await Content.AnyAsync()
                           ? ChildContent(Content) : NoElementsFoundTemplate
                       : NotAssignedTemplate;
    }

    [Parameter, UsedImplicitly]
    public IQueryable<TItem>? Content
    {
        get => _content;
        set
        {
            if (_content != value)
            {
                Fragment = null;
                _content = value;
            }
        }
    }

    public IQueryable<TItem>? _content;

    [Parameter, UsedImplicitly]
    public RenderFragment<IEnumerable<TItem>> ChildContent { get; set; } = default!;

    [Parameter]
    public RenderFragment NoElementsFoundTemplate { get; set; } = @<p>No elements found for this view's content.</p>;

    [Parameter]
    public RenderFragment NotAssignedTemplate { get; set; } = @<p>No instance was found for this view's content.</p>;
    #nullable restore
}