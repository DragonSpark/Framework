@using System.Timers
@implements IDisposable

@code {
    readonly Timer _timer = new ();

    Func<Task> _refresh = default!;

    [Parameter]
    public bool Repeat { get; set; }

    [Parameter]
    public TimeSpan Interval { get; set; } = TimeSpan.FromMinutes(1);

    [Parameter]
    public EventCallback Updated { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _refresh = Updated.InvokeAsync;
        _timer.AutoReset = Repeat;
        _timer.Interval = Interval.TotalMilliseconds;
        _timer.Elapsed += OnElapsed;
        _timer.Start();
    }

    void OnElapsed(object? sender, ElapsedEventArgs e)
    {
        InvokeAsync(_refresh);
    }

    public void Dispose()
    {
        _timer.Stop();
        _timer.Dispose();
    }

}