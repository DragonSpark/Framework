@using DragonSpark.Compose
@using DragonSpark.Model.Results
<CallbackRenderGate>
    <DragonSpark.Presentation.Components.Eventing.HandlerView T="ActivityUpdatedMessage" Received="@(context.Register<ActivityUpdatedMessage>(OnUpdate))" />
</CallbackRenderGate>

@ChildContent(Monitor?.Active ?? false)

@code {
    readonly Switch _active = new();

    [Parameter]
    public RenderFragment<bool> ChildContent { get; set; } = default!;

    [CascadingParameter] IActivityMonitor? Monitor { get; set; }

    Task OnUpdate(ActivityUpdatedMessage parameter)
    {
        var (owner, active) = parameter;
        if (owner == Monitor && _active.Assign(active))
        {
            StateHasChanged();
        }
        return Task.CompletedTask;
    }

}
