@using DragonSpark.Application.Runtime
@using DragonSpark.Compose
@using DragonSpark.Model.Results
@inject IJSRuntime Runtime

<section id="@Identifier" @attributes="@AdditionalAttributes">
	@ChildContent
</section>

@code {

	// ReSharper disable once FlagArgument
	protected override Task OnAfterRenderAsync(bool firstRender)
	{
        var result = Enabled && (firstRender || Signal.Down()) ? Runtime.InvokeAsync<bool>("scrollToElementId", Identifier).AsTask() : base.OnAfterRenderAsync(false);
		return result;
	}

    [Parameter]
    public Switch Signal { get; set; } = new();

	[Parameter]
	public string Identifier { get; set; } = IdentifyingText.Default.Get();

	[Parameter]
	public bool Enabled
	{
		get => _enabled;
		set
		{
			if (_enabled != value)
			{
				_enabled = value;
                Signal.Up();
			}
		}
	}	bool _enabled = true;

	[Parameter]
	public RenderFragment ChildContent { get; set; } = default!;

	[Parameter(CaptureUnmatchedValues = true)]
	public Dictionary<string, object?> AdditionalAttributes { get; set; } = default!;

}