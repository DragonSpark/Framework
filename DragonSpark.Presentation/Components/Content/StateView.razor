@typeparam T

@using DragonSpark.Presentation.Environment.Browser
@using DragonSpark.Model.Results
@using DragonSpark.Runtime.Activation

@inherits Templates.ActiveContentTemplateComponentBase<T>

@if (_content is not null)
{
    @ChildContent(_content)
}
else
{
    @LoadingTemplate
}

@code
{
    T? _content;

    [Parameter]
    public IClientVariable<T> Definition { get; set; } = null!;

    [Parameter]
    public IResult<T> New { get; set; } = New<T>.Default;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var current = await Definition.Get();
            _content = current.Success ? current.Value : New.Get();
            StateHasChanged();
        }
    }

}
