@using DragonSpark.Application.Entities.Queries.Runtime
@using DragonSpark.Application.Entities.Queries.Runtime.Shape
@using DragonSpark.Compose
@using DragonSpark.Model
@using DragonSpark.Model.Commands
@using DragonSpark.Model.Results
@using DragonSpark.Model.Selection.Stores
@using DragonSpark.Presentation.Components.Eventing
@using System.Collections.Concurrent

@typeparam T

@inherits ManyActiveContentTemplateComponentBase<IRadzenPaging<T>>

<QueryContentContainer
	Content="@Content"
	Compose="@Compose"
	Pagers="@Pagers"
	LoadingTemplate="@LoadingTemplate"
	NoElementsFoundTemplate="@NoElementsFoundTemplate"
	NotAssignedTemplate="@NotAssignedTemplate"
	ExceptionTemplate="@ExceptionTemplate"
	ReportedType="@ReportedType"
>
	<RadzenPagingContainer ChildContent="@ChildContent"
	                       LoadingTemplate="@LoadingTemplate"
	                       NotAssignedTemplate="@NotAssignedTemplate"
	                       ExceptionTemplate="@ExceptionTemplate"
						   IncludeCount="@IncludeCount"
	/>
</QueryContentContainer>

@code {
	[Parameter]
	public IQueries<T>? Content { get; set; }

	[Parameter]
	public bool IncludeCount { get; set; } = true;

	[Parameter]
	public ICompose<T> Compose { get; set; } = DefaultCompose<T>.Default;

	[Parameter]
	public IPagers<T> Pagers { get; set; } = Pagers<T>.Default;

	[Parameter]
	public Type? ReportedType { get; set; }
}

