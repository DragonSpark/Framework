@using DragonSpark.Compose
@using System.Threading

@typeparam TApi where TApi : class
@typeparam T

@inherits ContentComponentBase<T>

@inject TApi Api

<ApplicationContentView TValue="T" Content="@Content" ChildContent="@ChildContent" />

@code {

    [Parameter]
    public required Func<TApi, CancellationToken, Task<T?>> Factory { get; set; }

    [Parameter]
    public required RenderFragment<T> ChildContent { get; set; }

    [CascadingParameter]
    public required Task<AuthenticationState> State { get; set; }

    protected override async ValueTask<T?> GetContent() => await Factory(Api, Stop).Off();

}