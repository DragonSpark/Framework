@using DragonSpark.Compose
@using DragonSpark.Model.Selection
@using DragonSpark.Model.Selection.Alterations
@using DragonSpark.Presentation.Environment

@inherits ContentComponentBase<MarkupString>

@inject PropagatedClient Clients

<ApplicationContentView Content="@Content">
    @context
</ApplicationContentView>

@code {
    HttpClient _client = null!;

    protected override void OnInitialized()
    {
        _client = Client ?? Clients.Get();
        base.OnInitialized();
    }

    [Parameter]
    public HttpClient? Client { get; set; }

    [Parameter]
    public string Address { get; set; } = null!;

    [Parameter]
    public IAlteration<string> Alteration { get; set; } = Self<string>.Default;

    protected override async ValueTask<MarkupString> GetContent()
    {
        var response = await _client.GetStringAsync(Address).Off();
        var content  = Alteration.Get(response);
        return new(content);
    }

}
