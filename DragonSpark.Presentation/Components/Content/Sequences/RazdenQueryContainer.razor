@using DragonSpark.Application.Entities.Queries.Runtime
@using DragonSpark.Application.Entities.Queries.Runtime.Shape
@using DragonSpark.Application.Runtime.Operations
@using DragonSpark.Compose
@using DragonSpark.Model
@using DragonSpark.Model.Commands
@using DragonSpark.Model.Results
@using DragonSpark.Model.Selection.Stores
@using DragonSpark.Presentation.Components.Eventing
@using System.Collections.Concurrent

@typeparam T

@inherits DragonSpark.Presentation.Components.Content.Templates.ManyActiveContentTemplateComponentBase<IRadzenPaging<T>>

<div>
	<QueryContentContainer
		Content="@Content"
		Compose="@Compose"
		Pagers="@Pagers"
		LoadingTemplate="@LoadingTemplate"
		EmptyElementsTemplate="@EmptyElementsTemplate"
		NotFoundTemplate="@NotFoundTemplate"
		ExceptionTemplate="@ExceptionTemplate"
	>
		<RadzenPagingContainer
			Content="@context"
			ChildContent="@ChildContent"
			LoadingTemplate="@LoadingTemplate"
			NotFoundTemplate="@NotFoundTemplate"
			ExceptionTemplate="@ExceptionTemplate"
			Reporter="@Reporter"
		/>
	</QueryContentContainer>
</div>

@code {
	[Parameter]
	public IQueries<T>? Content { get; set; }

	[Parameter]
	public IReporter<IPaging<T>, IRadzenPaging<T>> Reporter { get; set; } = RadzenReporter<T>.Default;

	[Parameter]
	public ICompose<T> Compose { get; set; } = DefaultCompose<T>.Default;

	[Parameter]
	public IPagers<T> Pagers { get; set; } = Pagers<T>.Default;
}

