
@typeparam TValue

@inherits DragonSpark.Presentation.Components.ComponentBase

@if (Content is not null)
{
	@Store(ChildContent(Content))
}
else
{
	@Store(NotFoundTemplate)
}

@code {

	[Parameter]
	public TValue? Content { get; set; }

	[Parameter]
	public RenderFragment<TValue> ChildContent { get; set; } = default!;

	[Parameter]
	public RenderFragment NotFoundTemplate { get; set; } = @<div>This view's required information does not exist.</div>
	;

	[Parameter]
	public EventCallback<RenderFragment> Rendered { get; set; }

	RenderFragment? Current { get; set; }

	RenderFragment Store(RenderFragment current) => Current = current;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (Current is not null)
		{
			await Rendered.InvokeAsync(Current);
		}
	}

}
