@using DragonSpark.Compose
@using DragonSpark.Presentation.Components.Eventing
@using Humanizer

@typeparam T where T : class

@inherits ModelPersistenceComponentBase<T>

@inject ProblemSavingState ProblemSaving
@inject SavedContentMessage Saved

<HandlerView T="SaveModelMessage" Received="@Handle" />

@code
{
    [Parameter]
    public required T Model { get; set; }

    Task Handle(SaveModelMessage message) => message.Subject == Model ? SaveContent() : Task.CompletedTask;

    async Task SaveContent()
    {
        try
        {
            var content = Serializer.Get(Model);
            await Store.Off(content);
            Saved.Execute(content.Length.Bytes().Humanize());
        }
        catch (Exception e)
        {
            ProblemSaving.Execute(e);
            await ErrorOccurred.Invoke().Off();
        }
    }
}