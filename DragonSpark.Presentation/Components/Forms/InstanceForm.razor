@using JetBrains.Annotations
@typeparam TItem

<Form @ref="_form" TItem="Instance<TItem>" Data="Source" Submit="OnSubmit">
    <OperationMonitor @ref="_monitor" ChildContent="@ChildContent(Source)" />
</Form>

@code {

    [UsedImplicitly]
    OperationMonitor _monitor;

    [UsedImplicitly]
    Form<Instance<TItem>> _form;

    [Parameter]
    public RenderFragment<Instance<TItem>> ChildContent { get; set; }

    [Parameter]
    public Instance<TItem> Source { get; set; } = new Instance<TItem>();

    [Parameter]
    public EventCallback<Instance<TItem>> Submit { get; set; }

    [UsedImplicitly]
    async Task OnSubmit(Instance<TItem> parameter)
    {
        var valid = await _monitor.Validate();
        if (valid)
        {
            await Submit.InvokeAsync(parameter);
        }
        else
        {
            await _form.InvalidSubmit.InvokeAsync(new FormInvalidSubmitEventArgs
            {
                Errors = _form.EditContext.GetValidationMessages()
            });
        }
    }
}