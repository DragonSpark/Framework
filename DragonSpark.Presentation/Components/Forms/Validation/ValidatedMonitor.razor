@using DragonSpark.Compose
@using System.Diagnostics.CodeAnalysis
@implements IDisposable

@code {
	[Parameter]
	public EventCallback Validated { get; set; }

	[CascadingParameter]
    [field: AllowNull, MaybeNull]
    IValidated Validation
	{
		get => field.Verify();
		set
		{
			if (field != value)
			{
				if (field != null)
				{
					field.Validated -= ValidationOnValidated;
				}

				if ((field = value) != null)
				{
					field.Validated += ValidationOnValidated;
				}
			}
		}
	}

    void ValidationOnValidated(object? sender, ValidationCallbackEventArgs e)
	{
		e.Callbacks.Add(Validated);
	}

	public void Dispose()
	{
		GC.SuppressFinalize(this);
		Validation = null!;
	}

}
