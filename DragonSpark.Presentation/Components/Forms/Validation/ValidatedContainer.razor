@using DragonSpark.Compose

@inherits Components.ComponentBase

@implements IValidated
@implements IDisposable

<CascadingValue TValue="IValidated" Value="@(this)" IsFixed="true">
    @ChildContent(_validation.Verify());
</CascadingValue>

@code {
    public event EventHandler<ValidationCallbackEventArgs> Validated = delegate {};

    EditorValidation? _validation;

    [Parameter]
    public RenderFragment<EditorValidation> ChildContent { get; set; } = null!;

    [CascadingParameter]
    EditContext? EditContext
    {
        get => _context;
        set
        {
            if (_context != value)
            {
                if (_context != null)
                {
                    Validated = delegate { };
                }

                if ((_context = value) != null)
                {
                    _validation = new(_context, this, () => Validated);
                }
            }
        }
    }	EditContext? _context;

    public void Dispose()
	{
		GC.SuppressFinalize(this);
		EditContext = null;
	}
}
