@using DragonSpark.Presentation.Components.Content.Templates
@using DragonSpark.Presentation.Environment.Browser
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@typeparam T

@inherits Components.ComponentBase

@if (_input is null)
{
    @LoadingTemplate
}
else if (_input.Value.Success)
{
    @ChildContent(_input.Value.Value)
}
else
{
    @NotFoundTemplate
}

@code {
    ProtectedBrowserStorageResult<T>? _input;

    [Parameter]
    public IClientVariable<T> Input { get; set; } = null!;

    [Parameter]
    public RenderFragment LoadingTemplate { get; set; } = DefaultLoadingTemplate.Default;

    [Parameter]
    public RenderFragment<T?> ChildContent { get; set; } = null!;

    [Parameter]
    public RenderFragment NotFoundTemplate { get; set; } = EmptyContentTemplate.Default;

    [Parameter]
    public EventCallback<ProtectedBrowserStorageResult<T>> Ready { get; set; }

    [CascadingParameter]
    IActivityReceiver Receiver { get; set; } = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _input = await Input.Get();
            await Ready.Invoke(_input.Value);
            StateHasChanged();
        }
    }
}