@using DragonSpark.Compose
@using DragonSpark.Presentation.Environment.Browser.Window

@implements IAsyncDisposable

@inject CreateWindowFocusElement Create

@code {
    WindowFocusElement? _element;

    [Parameter]
    public EventCallback Focused { get; set; }

    [JSInvokable]
    public Task OnFocus() => Focused.Invoke();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _element = await Create.Get(new (this));
            await _element.Start().Off();
        }
    }

    public ValueTask DisposeAsync() => _element?.DisposeAsync() ?? ValueTask.CompletedTask;
}