@using DragonSpark.Compose
@using System.Timers
<Refresher Enabled="@Enabled" Timer="@Timer" Repeat="@Repeat" Interval="@Interval" Updated="@_update" />
@ChildContent

@code {
    EventCallback _update;
    protected override void OnInitialized()
    {
        _update = Start.A.Callback(OnUpdate).Hide();
        base.OnInitialized();
    }

    [Parameter]
    public Timer? Timer { get; set; } = new ();

    [Parameter]
    public bool Enabled { get; set; } = true;

    [Parameter]
    public TimeSpan Interval { get; set; } = TimeSpan.FromSeconds(30);

    [Parameter]
    public bool Repeat { get; set; } = true;

    [Parameter]
    public EventCallback Updated { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; } = default!;

    Task OnUpdate()
    {
        if (Updated.HasDelegate)
        {
            return Updated.Invoke();
        }
        StateHasChanged();
        return Task.CompletedTask;
    }
}
