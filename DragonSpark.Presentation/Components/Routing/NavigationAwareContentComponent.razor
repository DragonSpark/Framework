@inherits Components.ComponentBase

@implements IDisposable

@inject NavigationManager Navigation

@ChildContent

@code {
	readonly EventHandler<LocationChangedEventArgs> _changed;

	public NavigationAwareContentComponent() => _changed = OnChange;

    [Parameter]
	public RenderFragment ChildContent { get; set; } = default!;

	protected override Task OnInitializedAsync()
	{
		Navigation.LocationChanged += _changed;
		return base.OnInitializedAsync();
	}

	void OnChange(object? sender, EventArgs e)
	{
		StateHasChanged();
	}

	~NavigationAwareContentComponent()
	{
		OnDispose(false);
	}

	public void Dispose()
	{
		OnDispose(true);
		GC.SuppressFinalize(this);
	}

	protected virtual void OnDispose(bool _)
	{
		Navigation.LocationChanged -= _changed;
	}
}
