@using DragonSpark.Compose
@using DragonSpark.Model.Results
@using DragonSpark.Application
@using DragonSpark.Application.AspNet.Security.Identity.Model

@inject SignOutCurrentPath Refresh

@code
{
    readonly Switch _update = new();

    [CascadingParameter]
    AuthenticationState State
    {
        get;
        set
        {
            if (field != value)
            {
                if (field.Account() is not null)
                {
                    var authenticated = value.User.IsAuthenticated();
                    var current       = field.Account()?.User.IsAuthenticated() ?? authenticated;
                    if (authenticated != current)
                    {
                        _update.Up();
                    }
                }

                field = value;
            }
        }
    } = null!;

    protected override void OnParametersSet()
    {
        if (_update.Down())
        {
            Refresh.Execute();
        }
        base.OnParametersSet();
    }
}