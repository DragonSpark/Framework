@using DragonSpark.Compose

@typeparam T

<DialogContext T="T" @ref="_context" Title="@Title" Width="@Width" Context="parameter">
    <ConfirmResult @ref="_result" PrimaryClass="@PrimaryClass" SecondaryClass="@SecondaryClass" Confirmation="@Confirmation" ChildContent="@ChildContent(parameter)" />
</DialogContext>

@code {

    ConfirmResult _result = default!;

    DialogContext<T> _context = default!;

    [Parameter]
    public string Title { get; set; } = default!;

    [Parameter]
    public string Width { get; set; } = "unset";

    [Parameter]
    public string PrimaryClass { get; set; } = default!;

    [Parameter]
    public string SecondaryClass { get; set; } = default!;

    [Parameter]
    public Func<ValueTask<bool>> Confirmation { get; set; } = () => true.ToOperation();

    [Parameter]
    public RenderFragment<DialogParameter<T>> ChildContent { get; set; } = default!;


    public async ValueTask<DialogResult> Confirm(T entity)
    {
        await _context.Open(entity);
        var result = _result.Result ?? DialogResult.Other;
        return result;
    }


}
