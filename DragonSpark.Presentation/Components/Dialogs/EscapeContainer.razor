@using DragonSpark.Compose
<div @onkeyup="@_press" @attributes="@AdditionalAttributes">
    @if (EnableFocus)
    {
        <input id="@Identifier" class="@FocusClass" inputmode="none"/>
    }

    @ChildContent
</div>

@code {
    EventCallback<KeyboardEventArgs> _press;

    protected override void OnInitialized()
    {
        _press = Start.A.Callback<KeyboardEventArgs>(OnPress).Hide();
        base.OnInitialized();
    }

    [Parameter]
    public bool EnableFocus { get; set; } = true;

    [Parameter]
    public string Identifier { get; set; } = UniqueIdentifiers.Default.Get();

    [Parameter]
    public string FocusClass { get; set; } = "dragonspark-input-hidden";

    [Parameter]
    public EventCallback Escaped { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; } = null!;

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object?> AdditionalAttributes { get; set; } = null!;

    Task OnPress(KeyboardEventArgs parameter) => parameter.Code switch
    {
        "Escape" => Escaped.Invoke(),
        _ => Task.CompletedTask
    };
}