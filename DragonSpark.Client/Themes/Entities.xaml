<ResourceDictionary
	mc:Ignorable="d"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ds="http://framework.dragonspark.us"
	xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:InteractionRequest="clr-namespace:Microsoft.Practices.Prism.Interactivity.InteractionRequest;assembly=Microsoft.Practices.Prism.Interactivity">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DragonSpark.Client;component/Themes/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>
	<DataTemplate DataType="ds:EntitySetCollectionViewSource">
		<ds:BusyIndicator x:Name="LayoutRoot" d:DesignWidth="548" d:DesignHeight="300" BusyContent="{ds:Locate TypeName=ds:ICommandMonitor}">
			<ds:BusyIndicator.Resources>
				<ds:ExecuteCommandSetCommand x:Key="SubmitCommand">
					<!--<ds:SubmitEntitySetSourceOperation Context="{ds:ApplyBinding Binding={Binding}}" Title="Submitting Changes to Service">
						<ds:SubmitEntitySetSourceOperation.Definitions>
							<ds:DictionaryOfTExtension KeyType="{ds:Type TypeName=System:Type}" TypeArgument="{ds:Type TypeName=ds:InvokeOperationDefinition}">
								<ds:KeyValuePair Key="{ds:IdentityType}" >
									<ds:InvokeOperationDefinition EntityType="{ds:IdentityType}" MethodName="SaveUser">
										<ds:MethodParameter ParameterName="user" Value="{ds:ApplyBinding Binding={Binding View.CurrentItem}}" />
									</ds:InvokeOperationDefinition>
								</ds:KeyValuePair>
							</ds:DictionaryOfTExtension>							
						</ds:SubmitEntitySetSourceOperation.Definitions>
					</ds:SubmitEntitySetSourceOperation>-->
					<ds:Locate TypeName="ds:LoadUserOperation">
						<ds:BindingPropertySetter PropertyName="IsEnabled" Value="{Binding View.CurrentItem, Converter={ds:Static Member=ds:CurrentUserConverter.Instance}}" />
					</ds:Locate>
				</ds:ExecuteCommandSetCommand>
			</ds:BusyIndicator.Resources>
			<i:Interaction.Triggers>
				<i:EventTrigger SourceObject="{Binding}" EventName="Loading">
					<ds:InvokeCommandAction>
						<ds:Command.Attach>
							<ds:LoadEntitySetSourceOperation Context="{ds:ApplyBinding Binding={Binding}}" />
						</ds:Command.Attach>
					</ds:InvokeCommandAction>
				</i:EventTrigger>
			</i:Interaction.Triggers>
			<VisualStateManager.CustomVisualStateManager>
				<ds:ExtendedVisualStateManager />
			</VisualStateManager.CustomVisualStateManager>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="EntitySetManagementStates">
					<VisualState x:Name="DefaultEntitySetManagementState" />
					<VisualState x:Name="EntitySetsFound">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EntitySetCollectionPanel">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MessageContainer">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="EntitySetCollectionManagementStates">
					<VisualState x:Name="DefaultEntitySetCollectionManagementState" />
					<VisualState x:Name="MultipleEntitySetCollectionManagementStatesFound">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EntitySets">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="EntitySetMessageStates">
					<VisualState x:Name="DefaultEntitySetMessageState" />
					<VisualState x:Name="EntitySetEmptyState">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="EntitySetMessage">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{Binding NoItemsFoundMessage}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="EntityManagementStates">
					<VisualState x:Name="DefaultEntityManagementState" />
					<VisualState x:Name="EntitiesFound">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EntitySetMessage">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EntitySetContainer">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="QueryStates">
					<VisualState x:Name="DefaultQueryState" />
					<VisualState x:Name="QueryStateNotFound">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EntitiesPanel">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EntitiesMessageContainer">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="EditingStates">
					<VisualState x:Name="DefaultEditingState" />
					<VisualState x:Name="EditingInProgressState">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectorPanel" Storyboard.TargetProperty="IsEnabled">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<System:Boolean>False</System:Boolean>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Grid x:Name="LayoutRootContent">
				<i:Interaction.Behaviors>
					<ds:MultiBinding x:Name="EntitiesBinding" Converter="{ds:Static Member=ds:AnyBooleanMultiConverter.Instance}" ConverterParameter="True">
						<Binding Path="Query" Converter="{ds:Static Member=ds:StringNotNullOrEmptyConverter.Instance}" />
						<Binding Path="View.IsEmpty" Converter="{ds:Static Member=ds:BooleanConverter.Instance}" ConverterParameter="True" />
					</ds:MultiBinding>
					<ds:MultiBinding x:Name="QueryBinding" Converter="{ds:Static Member=ds:AllBooleanMultiConverter.Instance}" ConverterParameter="true">
						<Binding Path="Query" Converter="{ds:Static Member=ds:StringNotNullOrEmptyConverter.Instance}" />
						<Binding Path="View.IsEmpty" />
					</ds:MultiBinding>

					<ds:DataStateBehavior Binding="{Binding EntitySets.Count, Converter={ds:Static Member=ds:IsGreaterThanConverter.Instance}}" TrueState="EntitySetsFound" FalseState="DefaultEntitySetManagementState" Value="True" />
					<ds:DataStateBehavior Binding="{Binding EntitySets.Count, Converter={StaticResource IsGreaterThanOneConverter}}" TrueState="MultipleEntitySetCollectionManagementStatesFound" FalseState="DefaultEntitySetCollectionManagementState" Value="True" />
					<ds:DataStateBehavior Binding="{Binding EntitySets.SelectedItem, Converter={ds:Static Member=ds:NotNullToBooleanConverter.Instance}, ConverterParameter='True'}" TrueState="DefaultEntitySetMessageState" FalseState="EntitySetEmptyState" Value="True" />
					<ds:DataStateBehavior Binding="{Binding Value, ElementName=EntitiesBinding}" TrueState="EntitiesFound" FalseState="DefaultEntityManagementState" Value="True" />
					<ds:DataStateBehavior Binding="{Binding Value, ElementName=QueryBinding}" TrueState="QueryStateNotFound" FalseState="DefaultQueryState" Value="True" />
					<ds:DataStateBehavior Binding="{Binding (ds:DataFormCompensations.IsEditing), ElementName=SelectedEntity}" TrueState="EditingInProgressState" FalseState="DefaultEditingState" Value="True" />
				</i:Interaction.Behaviors>
				<toolkit:DockPanel x:Name="EntitySetCollectionPanel" Visibility="Collapsed">
					<ContentControl x:Name="SelectorPanel" Margin="0 0 5 0" Width="250">
						<Border BorderThickness="1" BorderBrush="Gray">
							<toolkit:DockPanel Margin="10">
								<ds:WatermarkedComboBox x:Name="EntitySets" Visibility="Collapsed" WatermarkContent="- Select an Entity Set -" toolkit:DockPanel.Dock="Top" MinHeight="25" ItemsSource="{Binding EntitySets}" SelectedItem="{Binding EntitySets.SelectedItem, Mode=TwoWay}" Margin="0 0 0 10" DisplayMemberPath="Title" />
								<Grid>
									<toolkit:DockPanel x:Name="EntitySetContainer" Visibility="Collapsed">
										<ds:QueryTextBox x:Name="Query" Text="{Binding Query, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" toolkit:DockPanel.Dock="Top" MaxHeight="25">
											<i:Interaction.Triggers>
												<i:EventTrigger EventName="Queried">
													<ds:InvokeCommandAction Command="{ds:Locate TypeName=ds:DomainCollectionViewRefreshCommand}" CommandParameter="{Binding View}" />
												</i:EventTrigger>
											</i:Interaction.Triggers>
										</ds:QueryTextBox>

										<Grid toolkit:DockPanel.Dock="Top">
											<toolkit:DockPanel x:Name="EntitiesPanel">
												<sdk:DataPager Source="{Binding View}" toolkit:DockPanel.Dock="Bottom" Visibility="{Binding View.PageCount, Converter={StaticResource IsGreaterThanOneVisibilityConverter}}" />
												<ListBox toolkit:DockPanel.Dock="Top" ItemsSource="{Binding View}" DisplayMemberPath="{Binding EntitySets.SelectedItem.DisplayNamePath}" />
											</toolkit:DockPanel>
											<Border x:Name="EntitiesMessageContainer" BorderBrush="Silver" BorderThickness="1" toolkit:DockPanel.Dock="Top" Visibility="Collapsed">
												<TextBlock x:Name="NoItemsFoundInSearch" VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" Margin="10" Text="{Binding NoItemsFoundInSearchMessage}" />
											</Border>
										</Grid>
									</toolkit:DockPanel>
									<TextBlock x:Name="EntitySetMessage" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Margin="10" Text="Select an Entity Set above to manage." />
								</Grid>
							</toolkit:DockPanel>
						</Border>
					</ContentControl>

					<Border BorderThickness="1" BorderBrush="Gray">
						<toolkit:DataForm x:Name="SelectedEntity" ItemsSource="{Binding View}" AutoEdit="False" CommandButtonsVisibility="{Binding CommandButtonsVisibility}" AutoCommit="False">
							<i:Interaction.Behaviors>
								<ds:DataFormCompensations x:Name="Compensations" />
								<ds:DisplayFieldView FieldViewName="{Binding ProfileViewName}" />
								<ds:EntityDataBehavior Behaviors="{Binding EntityType, Converter={ds:Static Member=ds:EntityDataBehaviorConverter.Instance}}" />

								<!-- Preserve: -->
								<ds:PreserveChanges />
								<ds:PreserveChangesDialog>
									<ds:PreserveChangesDialog.Message>
										<Binding Path="TitleMonitor" Converter="{ds:Static Member=ds:NamedTokenFormatConverter.Instance}" ConverterParameter="{}The current {0:EntitySet.ItemName} titled &apos;{0:Title}&apos; currently has pending changes.  Continuing will lose these changes.  Continue and lose your current changes?" />
									</ds:PreserveChangesDialog.Message>
								</ds:PreserveChangesDialog>

								<!-- Remove: -->
								<ds:ConfirmRemoval x:Name="ConfirmRemoval" />
								<ds:RemovalDialog>
									<ds:RemovalDialog.DialogTitle>
										<Binding Path="TitleMonitor" Converter="{ds:Static Member=ds:NamedTokenFormatConverter.Instance}" ConverterParameter="{}Remove {0:EntitySet.ItemName}" />
									</ds:RemovalDialog.DialogTitle>
									<ds:RemovalDialog.Message>
										<Binding Path="TitleMonitor" Converter="{ds:Static Member=ds:NamedTokenFormatConverter.Instance}" ConverterParameter="{}Are you sure you want to delete the {0:EntitySet.ItemName} named '{0:Title}'?&#x0a;&#x0a;This cannot be undone." />
									</ds:RemovalDialog.Message>
								</ds:RemovalDialog>
							</i:Interaction.Behaviors>
							<i:Interaction.Triggers>
								<i:EventTrigger SourceName="Compensations" EventName="IsEditingChanged">
									<ei:CallMethodAction TargetObject="{Binding}" MethodName="RefreshNotifications" />
								</i:EventTrigger>
								
								<!-- Submit: -->
								<i:EventTrigger SourceName="Compensations" EventName="Submitted">
									<ds:InvokeCommandAction x:Name="SubmitCommandAction" ds:Command.Attach="{StaticResource SubmitCommand}" />
								</i:EventTrigger>
								<i:EventTrigger SourceObject="{Binding Command, ElementName=SubmitCommandAction}" EventName="Completed">
									<ei:CallMethodAction TargetObject="{Binding View}" MethodName="Refresh" IsEnabled="{Binding View.CurrentItem, Converter={ds:Static Member=ds:CurrentUserConverter.Instance}}" />
									<ei:CallMethodAction TargetObject="{Binding}" MethodName="RefreshNotifications" />
								</i:EventTrigger>
								
								<!-- Remove: -->
								<i:EventTrigger SourceName="ConfirmRemoval" EventName="Removed">
									<ds:InvokeCommandAction x:Name="RemoveCommandAction" ds:Command.Attach="{StaticResource SubmitCommand}" />
								</i:EventTrigger>								
							</i:Interaction.Triggers>
						</toolkit:DataForm>
					</Border>
				</toolkit:DockPanel>
				<Border x:Name="MessageContainer" BorderBrush="Silver" BorderThickness="1" toolkit:DockPanel.Dock="Top">
					<TextBlock x:Name="NoEntitySetsFoundMessage" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Margin="10" Text="{Binding NoEntitySetsFoundMessage}" />
				</Border>
			</Grid>
		</ds:BusyIndicator>
	</DataTemplate>

	<DataTemplate DataType="ds:EntityDialogNotification">
		<toolkit:DataForm CurrentItem="{Binding Entity}" AutoEdit="False" AutoCommit="False" CommandButtonsVisibility="Commit,Cancel" Width="400">
			<i:Interaction.Behaviors>
				<ds:DisplayFieldView FieldViewName="{Binding ProfileName}" />
				<ds:DataFormCompensations x:Name="Compensations" AutoEdit="True" />
			</i:Interaction.Behaviors>
			<i:Interaction.Triggers>
				<i:EventTrigger SourceName="Compensations" EventName="Submitted">
					<ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="Result" Value="True" />
					<ei:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ds:ChildWindow}}" MethodName="Close" />
				</i:EventTrigger>
				<i:EventTrigger SourceName="Compensations" EventName="Canceled">
					<ei:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ds:ChildWindow}}" MethodName="Close" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</toolkit:DataForm>
	</DataTemplate>

	<DataTemplate DataType="ds:AssignEntityContext">
		<ds:BusyIndicator x:Name="LayoutRoot" BusyContent="{ds:Locate TypeName=ds:ICommandMonitor}">
			<ds:BusyIndicator.Resources>
				<ds:DomainCollectionViewSource x:Key="Source" DomainContext="{Binding Context}" EntityType="{Binding Profile.EntityType}" EnableAutomaticLoading="False" />
			</ds:BusyIndicator.Resources>
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Ready" SourceObject="{StaticResource Source}">
					<ds:InvokeCommandAction Command="{ds:Locate TypeName=ds:DomainCollectionViewRefreshCommand}" CommandParameter="{Binding View, Source={StaticResource Source}}" />
				</i:EventTrigger>
				<i:EventTrigger EventName="Loading" SourceObject="{StaticResource Source}">
					<ds:InvokeCommandAction>
						<ds:Command.Attach>
							<ds:LoadSourceOperation Context="{StaticResource Source}" Title="Loading Entities">
								<ds:QueryDefinition>
									<ds:ApplyBinding Binding="{Binding QuickFilter}" />
								</ds:QueryDefinition>
							</ds:LoadSourceOperation>
						</ds:Command.Attach>
					</ds:InvokeCommandAction>
				</i:EventTrigger>
			</i:Interaction.Triggers>
			<VisualStateManager.CustomVisualStateManager>
				<ds:ExtendedVisualStateManager />
			</VisualStateManager.CustomVisualStateManager>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="DefaultBaseStates">
					<VisualState x:Name="DefaultBaseState" />
					<VisualState x:Name="EntitiesFoundState">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Filter">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MessageContainer">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EntityList">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FilterStateGroups">
					<VisualState x:Name="DefaultFilterState" />
					<VisualState x:Name="EntitiesNotFoundWithFilterApplied">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Filter">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Message" Storyboard.TargetProperty="Text">
								<DiscreteObjectKeyFrame KeyTime="00:00:00.00" Value="No items found that meet the specified criteria." />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<toolkit:DockPanel Background="White" Margin="10" MinWidth="300" MinHeight="300">
				<i:Interaction.Behaviors>
					<ds:DataStateBehavior Binding="{Binding View.IsEmpty, Source={StaticResource Source}}" TrueState="DefaultBaseState" FalseState="EntitiesFoundState" Value="True" />
					<ds:DataStateBehavior Binding="{Binding QuickFilter, Converter={ds:Static Member=ds:StringNotNullOrEmptyConverter.Instance}}" TrueState="DefaultFilterState" FalseState="EntitiesNotFoundWithFilterApplied" Value="False" />
				</i:Interaction.Behaviors>
				<ds:QueryTextBox x:Name="Filter" Text="{Binding QuickFilter, Mode=TwoWay}" toolkit:DockPanel.Dock="Top" Visibility="Collapsed" Height="25">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Queried">
							<ds:InvokeCommandAction Command="{ds:Locate TypeName=ds:DomainCollectionViewRefreshCommand}" CommandParameter="{Binding View, Source={StaticResource Source}}" />
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</ds:QueryTextBox>

				<Grid toolkit:DockPanel.Dock="Top">
					<toolkit:DockPanel x:Name="EntityList" Visibility="Collapsed">
						<sdk:DataPager PageSize="10" Source="{Binding View, Source={StaticResource Source}}" toolkit:DockPanel.Dock="Bottom"></sdk:DataPager>
						<ListBox toolkit:DockPanel.Dock="Top" ItemsSource="{Binding View, Source={StaticResource Source}}" DisplayMemberPath="{Binding Profile.DisplayNamePath}" SelectedItem="{Binding SelectedEntity, Mode=TwoWay}" />
					</toolkit:DockPanel>
					<Border x:Name="MessageContainer" BorderBrush="Silver" BorderThickness="1" toolkit:DockPanel.Dock="Top">
						<TextBlock x:Name="Message" Text="No entities were found." Width="200" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Margin="10" />
					</Border>
				</Grid>
			</toolkit:DockPanel>
		</ds:BusyIndicator>
	</DataTemplate>
	
	<DataTemplate DataType="ds:ManageEntityCollectionContext">
		<ds:BusyIndicator x:Name="LayoutRoot" BusyContent="{ds:Locate TypeName=ds:ICommandMonitor}">
			<VisualStateManager.CustomVisualStateManager>
				<ds:ExtendedVisualStateManager />
			</VisualStateManager.CustomVisualStateManager>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="DefaultBaseStates">
					<VisualState x:Name="DefaultBaseState" />
					<VisualState x:Name="EntitiesFoundState">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MessageContainer">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="EntityList">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FilterStateGroups">
					<VisualState x:Name="DefaultFilterState" />
					<VisualState x:Name="EntitiesNotFoundWithFilterApplied">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Filter">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Message" Storyboard.TargetProperty="Text">
								<DiscreteObjectKeyFrame KeyTime="00:00:00.00" Value="No items found that meet the specified criteria." />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<toolkit:DockPanel Background="White" Margin="10" MinWidth="500" MinHeight="300">
				<i:Interaction.Behaviors>
					<ds:DataStateBehavior Binding="{Binding View.IsEmpty}" TrueState="DefaultBaseState" FalseState="EntitiesFoundState" Value="True" />
				</i:Interaction.Behaviors>
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Unloaded">
						<ei:CallMethodAction TargetObject="{Binding}" MethodName="Dispose" />						
					</i:EventTrigger>					
				</i:Interaction.Triggers>
				<ContentControl x:Name="SelectorPanel">
					<Border BorderThickness="1" BorderBrush="Gray" Margin="10" MinWidth="250">
						<toolkit:DockPanel Margin="10">
							<Grid toolkit:DockPanel.Dock="Top">
								<toolkit:DockPanel x:Name="EntityList" Visibility="Collapsed">
									<sdk:DataPager PageSize="10" Source="{Binding View}" toolkit:DockPanel.Dock="Bottom"></sdk:DataPager>
									<ListBox toolkit:DockPanel.Dock="Top" ItemsSource="{Binding View}" DisplayMemberPath="{Binding Profile.DisplayNamePath}" />
								</toolkit:DockPanel>
								<Border x:Name="MessageContainer" BorderBrush="Silver" BorderThickness="1" toolkit:DockPanel.Dock="Top">
									<TextBlock x:Name="Message" Text="No entities were found." Width="200" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Margin="10" />
								</Border>
							</Grid>
						</toolkit:DockPanel>
					</Border>
				</ContentControl>
				<Border BorderThickness="1" BorderBrush="Gray" Margin="10">
					<toolkit:DataForm x:Name="Entity" ItemsSource="{Binding View}" CommandButtonsVisibility="{Binding Visibility}" AutoEdit="True" AutoCommit="True">
						<i:Interaction.Behaviors>
							<ds:DisplayFieldView FieldViewName="{Binding ViewProfileName}" />
							<ds:DataFormCompensations x:Name="Compensations" />
							<ds:DataFormCancelCompensations />

							<!-- Preserve: -->
							<ds:PreserveChanges />
							<ds:PreserveChangesDialog>
								<ds:PreserveChangesDialog.Message>
									<Binding Path="EntityTitle" Converter="{ds:Static Member=ds:NamedTokenFormatConverter.Instance}" ConverterParameter="{}The current {0:EntitySet.ItemName} titled &apos;{0:Title}&apos; currently has pending changes.  Continuing will lose these changes.  Continue and lose your current changes?" />
								</ds:PreserveChangesDialog.Message>
							</ds:PreserveChangesDialog>

							<!-- Remove: -->
							<ds:ConfirmRemoval x:Name="ConfirmRemoval" />
							<ds:RemovalDialog>
								<ds:RemovalDialog.DialogTitle>
									<Binding Path="EntityTitle" Converter="{ds:Static Member=ds:NamedTokenFormatConverter.Instance}" ConverterParameter="{}Remove {0:EntitySet.ItemName}" />
								</ds:RemovalDialog.DialogTitle>
								<ds:RemovalDialog.Message>
									<Binding Path="EntityTitle" Converter="{ds:Static Member=ds:NamedTokenFormatConverter.Instance}" ConverterParameter="{}Are you sure you want to delete the {0:EntitySet.ItemName} named '{0:Title}'?&#x0a;&#x0a;This cannot be undone." />
								</ds:RemovalDialog.Message>
							</ds:RemovalDialog>
						</i:Interaction.Behaviors>
						<!--<i:Interaction.Triggers>
							<i:EventTrigger EventName="Closing" SourceObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=sdk:ChildWindow}}">
								<ei:CallMethodAction TargetObject="{Binding ElementName=Compensations}" MethodName="EnsureEdits" />
							</i:EventTrigger>
						</i:Interaction.Triggers>-->
					</toolkit:DataForm>
				</Border>
			</toolkit:DockPanel>
		</ds:BusyIndicator>
	</DataTemplate>
	
	<DataTemplate DataType="ds:EntityCollectionField">
		<Grid x:Name="LayoutRoot" Background="White">
			<!--<i:Interaction.Behaviors>
				<ds:DataFieldBinding x:Name="Binding" Owner="{Binding Owner, Mode=TwoWay}" PropertyInfo="{Binding PropertyInfo, Mode=TwoWay}" />
			</i:Interaction.Behaviors>-->
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Loaded">
					<ei:CallMethodAction TargetObject="{Binding}" MethodName="Initialize" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
			<Button x:Name="Manage" Content="- Manage -" ClickMode="Press" Command="{ds:Locate TypeName=ds:ManageEntityCollectionDialogCommand}" CommandParameter="{Binding}">
				<i:Interaction.Triggers>
					<InteractionRequest:InteractionRequestTrigger SourceObject="{Binding Command.DisplayRequest, ElementName=Manage}">
						<InteractionRequest:PopupChildWindowAction />
					</InteractionRequest:InteractionRequestTrigger>
				</i:Interaction.Triggers>
			</Button>
		</Grid>
	</DataTemplate>
	
	<DataTemplate DataType="ds:EntityReferenceField">
		<ds:BusyIndicator x:Name="LayoutRoot" Background="White" BusyContent="{ds:Locate TypeName=ds:ICommandMonitor}">
			<ds:BusyIndicator.Resources>
				<ds:DomainCollectionViewSource x:Key="Source" DomainContext="{Binding Context}" EntityType="{Binding EntityType}" EnableAutomaticLoading="False" />
			</ds:BusyIndicator.Resources>
			<VisualStateManager.CustomVisualStateManager>
				<ds:ExtendedVisualStateManager />
			</VisualStateManager.CustomVisualStateManager>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="LoadedStates">
					<VisualState x:Name="LoadedStatesDefault" />
					<VisualState x:Name="LoadedStatesLoaded">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Load">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>

							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AvailableActions">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="DefaultVisualGroup">
					<VisualState x:Name="DefaultState" />
					<VisualState x:Name="AssignedState">
						<Storyboard>
							<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="WatermarkContent" Storyboard.TargetName="AvailableActions">
								<DiscreteObjectKeyFrame KeyTime="00:00:00.2" Value="" />
							</ObjectAnimationUsingKeyFrames>
							-->

							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Edit">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>

							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Clear">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>

							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Delete">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<i:Interaction.Behaviors>
				<ds:DataStateBehavior Binding="{Binding Value, Converter={ds:Static Member=ds:NotNullToBooleanConverter.Instance}}" TrueState="AssignedState" FalseState="DefaultState" Value="True" />
				<ds:DataStateBehavior Binding="{Binding RequiresLoad}" TrueState="LoadedStatesLoaded" FalseState="LoadedStatesDefault" Value="False" />

				<!--<ds:DataFieldBinding x:Name="Binding"
					Owner="{Binding Owner, Mode=TwoWay}"
					PropertyInfo="{Binding PropertyInfo, Mode=TwoWay}"
				/>-->
			</i:Interaction.Behaviors>
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Loaded">
					<ei:CallMethodAction TargetObject="{Binding}" MethodName="Initialize" />
				</i:EventTrigger>
				<i:EventTrigger EventName="Ready" SourceObject="{StaticResource Source}">
					<ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="View" Value="{Binding View, Source={StaticResource Source}}" />
					<ei:CallMethodAction TargetObject="{Binding}" MethodName="Refresh" />					
				</i:EventTrigger>
				
				<i:EventTrigger EventName="Loading" SourceObject="{StaticResource Source}">
					<ds:InvokeCommandAction>
						<ds:Command.Attach>
							<ds:LoadSourceOperation Context="{StaticResource Source}" Title="Loading Entity Reference">
								<ds:QueryDefinition>
									<ds:QueryDefinition.Shapers>
										<ds:ApplyBinding Binding="{Binding Shaper}" />
									</ds:QueryDefinition.Shapers>
								</ds:QueryDefinition>
							</ds:LoadSourceOperation>
						</ds:Command.Attach>
					</ds:InvokeCommandAction>
				</i:EventTrigger>
				<i:EventTrigger SourceObject="{StaticResource Source}" EventName="LoadComplete">
					<ei:CallMethodAction TargetObject="{Binding}" MethodName="Refresh" />
					<ds:InvokeCommandAction Command="{ds:Static Member=ds:CheckFormForChangesCommand.Instance}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=toolkit:DataForm}}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
			<Grid>
				<Button x:Name="Load" Content="- Click to Load -">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
							<ds:InvokeCommandAction Command="{ds:Locate TypeName=ds:DomainCollectionViewRefreshCommand}" CommandParameter="{Binding View}" />
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Button>

				<ds:WatermarkedComboBox x:Name="AvailableActions" WatermarkContent="{Binding Monitor, Converter={ds:Static Member=ds:NamedTokenFormatConverter.Instance}, ConverterParameter='{} - {0:Title} -', TargetNullValue='- [ Not Assigned ] -'}" Visibility="Collapsed">
					<ds:WatermarkedComboBox.WatermarkContentTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Center" />
						</DataTemplate>
					</ds:WatermarkedComboBox.WatermarkContentTemplate>
					<ComboBox.ItemContainerStyle>
						<Style TargetType="ComboBoxItem">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate>
										<ContentPresenter x:Name="ContentPresenter" />
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ComboBox.ItemContainerStyle>
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="SelectionChanged">
							<ds:SetProperty TargetName="AvailableActions" PropertyName="SelectedIndex">
								<ds:SetProperty.Value>
									<System:Int32>-1</System:Int32>
								</ds:SetProperty.Value>
							</ds:SetProperty>
						</i:EventTrigger>
					</i:Interaction.Triggers>

					<Button x:Name="CreateNew" Content="Create New ..." Padding="10 3" ClickMode="Press" Margin="4" Command="{ds:Locate TypeName=ds:CreateEntityDialogCommand}" CommandParameter="{Binding}">
						<i:Interaction.Triggers>
							<InteractionRequest:InteractionRequestTrigger SourceObject="{Binding Command.DisplayRequest, ElementName=CreateNew}">
								<InteractionRequest:PopupChildWindowAction>
									<InteractionRequest:PopupChildWindowAction.ChildWindow>
										<ds:ChildWindow Width="Auto" Height="Auto" Title="{Binding Title}" Content="{Binding Content}" HasCloseButton="False" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
									</InteractionRequest:PopupChildWindowAction.ChildWindow>
								</InteractionRequest:PopupChildWindowAction>
							</InteractionRequest:InteractionRequestTrigger>
						</i:Interaction.Triggers>
					</Button>
					<Button x:Name="Assign" Content="Assign ..." Padding="10 3" ClickMode="Press" Margin="4" Command="{ds:Locate TypeName=ds:AssignEntityDialogCommand}" CommandParameter="{Binding}">
						<i:Interaction.Triggers>
							<InteractionRequest:InteractionRequestTrigger SourceObject="{Binding Command.DisplayRequest, ElementName=Assign}">
								<InteractionRequest:PopupChildWindowAction />
							</InteractionRequest:InteractionRequestTrigger>
						</i:Interaction.Triggers>
					</Button>
					<Button x:Name="Edit" Content="Edit ..." Padding="10 3" ClickMode="Press" Visibility="Collapsed" Margin="4" Command="{ds:Locate TypeName=ds:EditEntityDialogCommand}" CommandParameter="{Binding}">
						<i:Interaction.Triggers>
							<InteractionRequest:InteractionRequestTrigger SourceObject="{Binding Command.DisplayRequest, ElementName=Edit}">
								<InteractionRequest:PopupChildWindowAction>
									<InteractionRequest:PopupChildWindowAction.ChildWindow>
										<ds:ChildWindow Width="Auto" Height="Auto" Title="{Binding Title}" Content="{Binding Content}" HasCloseButton="False" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
									</InteractionRequest:PopupChildWindowAction.ChildWindow>
								</InteractionRequest:PopupChildWindowAction>
							</InteractionRequest:InteractionRequestTrigger>
						</i:Interaction.Triggers>
					</Button>
					<Button x:Name="Clear" Content="Clear Association" Padding="10 3" ClickMode="Press" Visibility="Collapsed" Margin="4">
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="Click">
								<ds:ShowMessageBox x:Name="ConfirmClear" Message="You are about to clear this association.  The associated entity will not be deleted and you can assign it again at a later time.  Continue?" Caption="Confirm Clearing of Association" MessageBoxButton="OKCancel" />
							</i:EventTrigger>
							<i:EventTrigger SourceObject="{Binding ElementName=Clear, Converter={ds:Static Member=ds:TriggerActionConverter.Instance}, ConverterParameter=ConfirmClear}" EventName="Confirmed">
								<ds:InvokeCommandAction Command="{Binding ClearCommand}" />
								<ds:SetProperty TargetName="AvailableActions" PropertyName="IsDropDownOpen">
									<ds:SetProperty.Value>
										<System:Boolean>False</System:Boolean>
									</ds:SetProperty.Value>
								</ds:SetProperty>
							</i:EventTrigger>
						</i:Interaction.Triggers>
					</Button>
					<Button x:Name="Delete" Content="Delete" Padding="10 3" ClickMode="Press" Visibility="Collapsed" Margin="4">
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="Click">
								<ds:ShowMessageBox x:Name="ConfirmDeletion" Message="{Binding Monitor, Converter={ds:Static Member=ds:NamedTokenFormatConverter.Instance}, ConverterParameter='{}You are about to delete the {0:EntitySet.ItemName} titled {0:Title}.  This cannot be done.  Continue?'}" Caption="{Binding Monitor, Converter={StaticResource NamedTokenFormatConverter}, ConverterParameter='{}Confirm deletion of {0:EntitySet.ItemName}'}" MessageBoxButton="OKCancel" />
							</i:EventTrigger>
							<i:EventTrigger SourceObject="{Binding ElementName=Delete, Converter={ds:Static Member=ds:TriggerActionConverter.Instance}, ConverterParameter=ConfirmDeletion}" EventName="Confirmed">
								<ds:InvokeCommandAction Command="{Binding DeleteCommand}" />
								<ds:SetProperty TargetName="AvailableActions" PropertyName="IsDropDownOpen">
									<ds:SetProperty.Value>
										<System:Boolean>False</System:Boolean>
									</ds:SetProperty.Value>
								</ds:SetProperty>
							</i:EventTrigger>
						</i:Interaction.Triggers>
					</Button>
				</ds:WatermarkedComboBox>
			</Grid>
		</ds:BusyIndicator>
	</DataTemplate>
	
	
</ResourceDictionary>
