<#+
// <copyright file="ProxyTemplate.tt" company="Microsoft">
//  Copyright © Microsoft. All Rights Reserved.
// </copyright>

public class ProxyTemplate : Template
{
    readonly IEnumerable<ServiceContractDefinition> definitions;
    
    public ProxyTemplate( IEnumerable<ServiceContractDefinition> definitions )
    {
        this.definitions = definitions;
    }
    
    void RenderServices()
    {
        var query = from definition in definitions
                    select new ServiceTemplate( definition );
        foreach ( var item in query )
        {
            Write( item.TransformText() );
        }
    }
    
	public override string TransformText()
	{#>#pragma warning disable 1591
//-------------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by CodeContracted proxy generation template for C#
//		Generated at <#=DateTime.Now #>
//	
//		Changes to this file may cause incorrect behavior and will be lost if the
//		code is regenerated.
//	</auto-generated>
//-------------------------------------------------------------------------------------
using System;
using System.ServiceModel;
using System.CodeDom.Compiler;
using System.Diagnostics;

namespace <#= TransformationContext.RootNamespace #>.Services
{
	<#+ RenderServices(); #>

}<#+
    return this.GenerationEnvironment.ToString();
    }
}#>
