<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	xmlns:controls="clr-namespace:DragonSpark.Application.Client.Controls"
	xmlns:mui="http://firstfloorsoftware.com/ModernUI"
	xmlns:modernui="clr-namespace:FirstFloor.ModernUI;assembly=FirstFloor.ModernUI"
	xmlns:presentation="clr-namespace:DragonSpark.Application.Client.Presentation"
	xmlns:ds="clr-namespace:DragonSpark.Application.Client.Interaction"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:markup="http://framework.dragonspark.us">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/button.xaml" />
		<ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernUI.xaml" />
		<ResourceDictionary Source="/DragonSpark.Application.Client;component/Themes/Controls.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<presentation:CountConverter x:Key="OneCountConverter" Count="1" Inverse="True">
		<presentation:BooleanToVisibilityTranslator />
	</presentation:CountConverter>

	<presentation:BooleanConverter x:Key="BooleanToVisibilityConverter">
		<presentation:BooleanToVisibilityTranslator />
	</presentation:BooleanConverter>

	<presentation:NullToBooleanConverter x:Key="NullToBoleanVisibilityConverter">
		<presentation:BooleanToVisibilityTranslator />
	</presentation:NullToBooleanConverter>
	
	<Color x:Key="WinChromeColor">#FFDDDDDD</Color>
	<Color x:Key="WinForegroundColor">#DE000000</Color>
	<FontFamily x:Key="WinFontFamilyNormal">Segoe UI</FontFamily>
	<system:Double x:Key="WinFontSizeNormal">15</system:Double>
	<SolidColorBrush x:Key="WinForegroundBrush" Color="{StaticResource WinForegroundColor}"/>
	<Thickness x:Key="WinVerticalMargin">0,12</Thickness>
	<FontFamily x:Key="WinFontFamilySemiLight">Segoe UI SemiLight</FontFamily>
	<Thickness x:Key="WinHorizontalMargin">12,0</Thickness>
	<system:Double x:Key="WinFontSizeMedium">17</system:Double>
	<SolidColorBrush x:Key="WinChromeBrush" Color="{StaticResource WinChromeColor}"/>
	<Style x:Key="WinTextBlockBase" TargetType="TextBlock">
		<Setter Property="FontFamily" Value="{StaticResource WinFontFamilyNormal}"/>
		<Setter Property="FontSize" Value="{StaticResource WinFontSizeNormal}"/>
		<Setter Property="Foreground" Value="{StaticResource WinForegroundBrush}"/>
		<Setter Property="Margin" Value="{StaticResource WinHorizontalMargin}"/>
	</Style>
	<Style x:Key="WinTextTitle3Style" TargetType="TextBlock" BasedOn="{StaticResource WinTextBlockBase}">
		<Setter Property="FontFamily" Value="{StaticResource WinFontFamilySemiLight}"/>
		<Setter Property="FontSize" Value="{StaticResource WinFontSizeMedium}"/>
	</Style>
	<Color x:Key="WinTextBoxForegroundColor">#DE000000</Color>
	<system:Double x:Key="ApplicationBarIconSize">32</system:Double>
	<system:Double x:Key="WinFontSizeSmall">12</system:Double>
	<SolidColorBrush x:Key="WinTextBoxForegroundBrush" Color="{StaticResource WinTextBoxForegroundColor}"/>
	<Style x:Key="WinTextSmallStyle" TargetType="TextBlock" BasedOn="{StaticResource WinTextBlockBase}">
		<Setter Property="FontSize" Value="{StaticResource WinFontSizeSmall}"/>
		<Setter Property="Foreground" Value="{StaticResource WinTextBoxForegroundBrush}"/>
	</Style>

	<Style TargetType="ContentPresenter">
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
	</Style>

	<!-- System chrome color -->
	<ControlTemplate x:Key="ChromeButtonControlTemplate" TargetType="{x:Type ButtonBase}">
		<Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Margin="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
			<ContentPresenter
				x:Name="contentPresenter"
				ContentTemplate="{TemplateBinding ContentTemplate}"
				Content="{TemplateBinding Content}"
				ContentStringFormat="{TemplateBinding ContentStringFormat}"
				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
				Margin="{TemplateBinding Padding}"
				RecognizesAccessKey="True"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
				VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#FFADADAD" />
				<Setter Property="Opacity" TargetName="Chrome" Value="0.5" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="controls:Shell" BasedOn="{StaticResource {x:Type mui:ModernWindow}}">
		<Setter Property="IsTitleVisible" Value="True" />
		<Setter Property="LogoContent" Value="{Binding LogoData, RelativeSource={RelativeSource Self}}" />
		<Setter Property="LogoContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border Background="{DynamicResource Accent}" Width="36" Height="36" Margin="8,0" DataContext="{Binding}" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter},ConverterParameter=inverse}">
						<Path Stretch="Fill" Fill="#FFFFFFFF" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding}" />
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:Shell">
					<Border Name="WindowBorder" Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}">
						<Border.Background>
							<SolidColorBrush x:Name="WindowBorderBackground" Color="{DynamicResource WindowBackgroundColor}" />
						</Border.Background>
						<FrameworkElement.Resources>
							<ResourceDictionary>
								<Storyboard x:Key="BackgroundAnimation">
									<ColorAnimation Storyboard.TargetName="WindowBorderBackground" Storyboard.TargetProperty="Color" To="{DynamicResource WindowBackgroundColor}" Duration="0:0:.6" />
								</Storyboard>
							</ResourceDictionary>
						</FrameworkElement.Resources>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
							<AdornerDecorator>
								<Grid Grid.Name="LayoutRoot">
									<Grid.RowDefinitions>
										<RowDefinition Height="36" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>
									<ContentControl Grid.RowSpan="2" Content="{TemplateBinding BackgroundContent}" />
									<Grid >
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="96" />
										</Grid.ColumnDefinitions>
										<TextBlock Text="{TemplateBinding Title}" Margin="8,0" VerticalAlignment="Center" Style="{DynamicResource ModernWindowTitle}" DataContext="{TemplateBinding IsTitleVisible}" Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}}" />
										<ItemsControl Grid.Column="1" ItemsSource="{TemplateBinding TitleLinks}" Margin="0,0,24,0" WindowChrome.IsHitTestVisibleInChrome="True">
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<StackPanel Orientation="Horizontal" />
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
											<ItemsControl.ItemTemplate>
												<DataTemplate>
													<StackPanel Orientation="Horizontal">
														<Line Name="Separator" X1=".5" Y1="3" X2=".5" Y2="12" Margin="5,0" VerticalAlignment="Center" Stroke="{DynamicResource SeparatorBackground}" />
														<Button Command="mui:LinkCommands.NavigateLink" Style="{StaticResource SystemButtonLink}" Content="{Binding DisplayName}" CommandParameter="{Binding Source}" CommandTarget="{Binding ElementName=ContentFrame}" />
													</StackPanel>
													<DataTemplate.Triggers>
														<DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
															<Setter TargetName="Separator" Property="UIElement.Visibility" Value="Collapsed" />
														</DataTrigger>
													</DataTemplate.Triggers>
												</DataTemplate>
											</ItemsControl.ItemTemplate>
										</ItemsControl>
										<StackPanel Grid.Column="3" StackPanel.Orientation="Horizontal" FrameworkElement.VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True">
											<Button FrameworkElement.ToolTip="{x:Static modernui:Resources.Minimize}" FrameworkElement.Style="{StaticResource SystemButton}" ButtonBase.Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}">
												<ContentControl.Content>
													<Grid FrameworkElement.Width="13" FrameworkElement.Height="12" UIElement.RenderTransform="1,0,0,1,0,1">
														<Path Path.Data="M0,6L8,6z" FrameworkElement.Width="8" FrameworkElement.Height="7" FrameworkElement.VerticalAlignment="Center" FrameworkElement.HorizontalAlignment="Center" Shape.StrokeThickness="2" Shape.Stroke="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button}}" />
													</Grid>
												</ContentControl.Content>
											</Button>
											<Grid FrameworkElement.Margin="1,0,1,0">
												<Button Button.Name="Restore" FrameworkElement.ToolTip="{x:Static modernui:Resources.Restore}" FrameworkElement.Style="{StaticResource SystemButton}" UIElement.Visibility="Collapsed" ButtonBase.Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}">
													<ContentControl.Content>
														<Grid FrameworkElement.Width="13" FrameworkElement.Height="12" FrameworkElement.UseLayoutRounding="True" UIElement.RenderTransform="1,0,0,1,.5,.5">
															<Path Path.Data="M2,0L8,0 8,6 M0,3L6,3 M0,2L6,2 6,8 0,8z" FrameworkElement.Width="8" FrameworkElement.Height="8" FrameworkElement.VerticalAlignment="Center" FrameworkElement.HorizontalAlignment="Center" Shape.StrokeThickness="1" Shape.Stroke="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button}}" />
														</Grid>
													</ContentControl.Content>
												</Button>
												<Button Button.Name="Maximize" FrameworkElement.ToolTip="{x:Static modernui:Resources.Maximize}" FrameworkElement.Style="{StaticResource SystemButton}" ButtonBase.Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}">
													<ContentControl.Content>
														<Grid FrameworkElement.Width="13" FrameworkElement.Height="12">
															<Path Path.Data="M0,1L9,1 9,8 0,8z" FrameworkElement.Width="9" FrameworkElement.Height="8" FrameworkElement.VerticalAlignment="Center" FrameworkElement.HorizontalAlignment="Center" Shape.StrokeThickness="2" Shape.Stroke="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button}}" />
														</Grid>
													</ContentControl.Content>
												</Button>
											</Grid>
											<Button FrameworkElement.ToolTip="{x:Static modernui:Resources.Close}" FrameworkElement.Style="{StaticResource SystemCloseButton}" ButtonBase.Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}">
												<ContentControl.Content>
													<Grid FrameworkElement.Width="13" FrameworkElement.Height="12" UIElement.RenderTransform="1,0,0,1,0,1">
														<Path Path.Data="M0,0L8,7 M8,0L0,7z" FrameworkElement.Width="8" FrameworkElement.Height="7" FrameworkElement.VerticalAlignment="Center" FrameworkElement.HorizontalAlignment="Center" Shape.StrokeThickness="1.5" Shape.Stroke="{Binding Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button}}" />
													</Grid>
												</ContentControl.Content>
											</Button>
										</StackPanel>
										<ContentControl Grid.Column="2" ContentTemplate="{TemplateBinding LogoContentTemplate}" Content="{TemplateBinding LogoContent}" WindowChrome.IsHitTestVisibleInChrome="True" />
									</Grid>

									<mui:TransitioningContentControl Grid.Row="1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
									
									<Grid Grid.Name="ResizeGrip" Grid.Row="1" Panel.Background="#00FFFFFF" UIElement.Visibility="Collapsed" FrameworkElement.HorizontalAlignment="Right" FrameworkElement.VerticalAlignment="Bottom" WindowChrome.ResizeGripDirection="BottomRight">
										<Path FrameworkElement.Width="12" FrameworkElement.Height="12" FrameworkElement.Margin="1" Shape.Stroke="{DynamicResource WindowText}" Shape.StrokeThickness="1" Shape.Stretch="None" Path.Data="F1M1,10L3,10 M5,10L7,10 M9,10L11,10 M2,9L2,11 M6,9L6,11 M10,9L10,11 M5,6L7,6 M9,6L11,6 M6,5L6,7 M10,5L10,7 M9,2L11,2 M10,1L10,3" />
									</Grid>
								</Grid>
							</AdornerDecorator>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Trigger.Property="Window.IsActive" Trigger.Value="True">
							<Setter Setter.Value="{DynamicResource WindowBorderActive}" Setter.Property="Control.BorderBrush" />
						</Trigger>
						<Trigger Trigger.Property="Window.WindowState" Trigger.Value="Maximized">
							<Setter Setter.TargetName="Maximize" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
							<Setter Setter.TargetName="Restore" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
							<Setter Setter.TargetName="LayoutRoot" Setter.Property="FrameworkElement.Margin" Setter.Value="7" />
						</Trigger>
						<Trigger Trigger.Property="Window.WindowState" Trigger.Value="Normal">
							<Setter Setter.TargetName="Maximize" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
							<Setter Setter.TargetName="Restore" Setter.Property="UIElement.Visibility" Setter.Value="Collapsed" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Condition.Property="Window.ResizeMode" Condition.Value="CanResizeWithGrip" />
								<Condition Condition.Property="Window.WindowState" Condition.Value="Normal" />
							</MultiTrigger.Conditions>
							<Setter Setter.TargetName="ResizeGrip" Setter.Property="UIElement.Visibility" Setter.Value="Visible" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="NavigationFrame" TargetType="ContentControl">
		<DockPanel>
			<Grid DockPanel.Dock="Top">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="42" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<mui:ModernButton Margin="8,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" EllipseDiameter="24" IconWidth="12" IconHeight="12" IconData="F1M33,22L33,26 19.75,26 27,33 20.5,33 11,24 20.5,15 27,15 19.75,22 33,22z" Command="NavigationCommands.BrowseBack" ToolTip="{x:Static modernui:Resources.Back}" WindowChrome.IsHitTestVisibleInChrome="True" CommandTarget="{Binding ElementName=ContentFrame}"  />
				<mui:ModernMenu Grid.Column="1" LinkGroups="{TemplateBinding mui:ModernWindow.MenuLinkGroups}" SelectedSource="{Binding Source,ElementName=ContentFrame,Mode=TwoWay}" />
			</Grid>

			<!--<ContentPresenter Grid.Row="2" Margin="42,8,16,16"  ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />-->
			<Frame x:Name="ContentFrame" Margin="42,8,16,16" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
		</DockPanel>
	</ControlTemplate>

	<DataTemplate DataType="{x:Type ds:DialogNotification}">
		<DockPanel x:Name="LayoutRoot">
			<StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
				<Button Content="{Binding Accept}" Width="75" Height="25" HorizontalAlignment="Right" Margin="0,10,0,0" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" Visibility="{Binding Accept, Converter={StaticResource NullToBoleanVisibilityConverter}}">
					<Button.Command>
						<ds:ApplyDialogResultCommand Result="True" />
					</Button.Command>
				</Button>
				<Button Content="{Binding Cancel, TargetNullValue='Close'}" Width="75" Height="25" HorizontalAlignment="Right" Margin="20,10,0,0" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
					<Button.Command>
						<ds:ApplyDialogResultCommand Result="False" />
					</Button.Command>
				</Button>
			</StackPanel>
			<ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{Binding Content}" />
		</DockPanel>
	</DataTemplate>

	<DataTemplate DataType="{x:Type ds:OptionsNotification}">
		<DockPanel x:Name="LayoutRoot" MinWidth="250">
			<DockPanel DockPanel.Dock="Bottom">
				<Button Content="{Binding Destruction}" Padding="0" Width="75" Height="25" Foreground="Red" HorizontalAlignment="Left" Margin="0,10,0,0" Command="{markup:Locate ds:ApplySelectionResultCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" Visibility="{Binding Destruction, Converter={StaticResource NullToBoleanVisibilityConverter}}">
					<i:Interaction.Behaviors>
						<ds:BindingHost Item="{Binding Destruction}" ApplyTo="{Binding Command.Result, Mode=OneWayToSource}" />
					</i:Interaction.Behaviors>
				</Button>
				<Button DockPanel.Dock="Right" Padding="0" Content="{Binding Cancel, TargetNullValue='Close'}" Width="75" Height="25" HorizontalAlignment="Right" Margin="20,10,0,0" Command="{markup:Locate ds:ApplySelectionResultCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
					<i:Interaction.Behaviors>
						<ds:BindingHost Item="{Binding Cancel}" ApplyTo="{Binding Command.Result, Mode=OneWayToSource}" />
					</i:Interaction.Behaviors>
				</Button>
			</DockPanel>
			<ListBox FontSize="18" ItemsSource="{Binding Content}">
				<ListBox.ItemContainerStyle>
					<Style TargetType="ListBoxItem">
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
					</Style>
				</ListBox.ItemContainerStyle>
				<ListBox.ItemTemplate>
					<DataTemplate>
						<Button Command="{markup:Locate ds:ApplySelectionResultCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
							<Button.Template>
								<ControlTemplate>
									<TextBlock Text="{Binding}" Margin="0 12" TextAlignment="Center" />
								</ControlTemplate>
							</Button.Template>
							<i:Interaction.Behaviors>
								<ds:BindingHost Item="{Binding}" ApplyTo="{Binding Command.Result, Mode=OneWayToSource}" />
							</i:Interaction.Behaviors>
						</Button>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		</DockPanel>
	</DataTemplate>

	<!--<Style x:Key="LinkButton" 
	   TargetType="Button"
	   BasedOn="{StaticResource ResourceKey={x:Type Button}}"
	   >

		<Setter Property="Width" Value="Auto"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<ContentPresenter Content="{TemplateBinding Content}" 
								  ContentTemplate="{TemplateBinding  ContentTemplate}"
								  VerticalAlignment="Center"
								  >
						<ContentPresenter.Resources>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="TextDecorations" Value="Underline" />
							</Style>
						</ContentPresenter.Resources>
					</ContentPresenter>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Cursor" Value="Hand" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Foreground" Value="Red" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<DataTemplate DataType="{x:Type commanding:CommandMonitor}">
		<Grid>
			<VisualStateManager.CustomVisualStateManager>
				<ei:ExtendedVisualStateManager/>
			</VisualStateManager.CustomVisualStateManager>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="DefaultGroup">
					<VisualState x:Name="Default"/>
					<VisualState x:Name="Completed">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CloseOnCompletion">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Cancel">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Close">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<DockPanel Background="White">
				<StackPanel Margin="10">
					<TextBlock Text="{Binding Title}" Foreground="Black" FontWeight="Bold" Margin="0 0 0 4" />
					<ItemsControl ItemsSource="{Binding Items}" />

					<ProgressBar Height="22" Margin="0 4" Value="{Binding PercentageComplete, Mode=OneWay}" Minimum="0" Maximum="1" Visibility="{Binding Items, Converter={StaticResource OneCountConverter}}" IsTabStop="False" />

					<DockPanel Margin="4 0">
						<TextBlock Text="Status: " />
						<TextBlock Text="{Binding Status, Converter={x:Static presentation:ComponentDescriptionConverter.Instance}}" />
					</DockPanel>

					<DockPanel Margin="0 4" Visibility="{Binding AllowClose, Converter={StaticResource BooleanToVisibilityConverter}}">
						<CheckBox x:Name="CloseOnCompletion" Content="Close when Finished" VerticalAlignment="Center" Margin="0 0 5 0" IsChecked="{Binding Options.CloseOnCompletion, Mode=TwoWay}" />
						<Grid VerticalAlignment="Center">
							<Button x:Name="Cancel" Command="{Binding Cancel}" Content="Cancel" Visibility="{Binding Visibility, ElementName=CloseOnCompletion}" />
							<Button x:Name="Close" Command="{Binding Close}" Content="Close" Visibility="Collapsed" />
						</Grid>
					</DockPanel>
				</StackPanel>
			</DockPanel>

			<i:Interaction.Behaviors>
				<si:DataStateSwitchBehavior Binding="{presentation:Bind {Binding Status}}">
					<si:DataStateSwitchCase Value="None" State="Default" />
					<si:DataStateSwitchCase Value="Executing" State="Default" />
					<si:DataStateSwitchCase Value="Canceled" State="Completed" />
					<si:DataStateSwitchCase Value="Completed" State="Completed" />
					<si:DataStateSwitchCase Value="CompletedWithException" State="Completed"  />
				</si:DataStateSwitchBehavior>
			</i:Interaction.Behaviors>
		</Grid>
	</DataTemplate>

	<DataTemplate DataType="{x:Type commanding:CommandModel}">
		<Border CornerRadius="1.5,1.5,1.5,1.5" Margin="1,1,1,1" BorderBrush="Silver" BorderThickness="1" Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
			<VisualStateManager.CustomVisualStateManager>
				<ei:ExtendedVisualStateManager />
			</VisualStateManager.CustomVisualStateManager>
			<DockPanel>
				<Image Margin="8" VerticalAlignment="Top" ToolTipService.ToolTip="{Binding Status, Converter={x:Static presentation:ComponentDescriptionConverter.Instance}}" Source="{Binding Status, Converter={x:Static presentation:StringFormatConverter.Instance}, ConverterParameter='{}/DragonSpark.Application.Client;component/Themes/Images/Operations/{0}.png'}" Stretch="None" />

				<Button x:Name="DisplayExceptionDetails" Style="{StaticResource LinkButton}" Foreground="DodgerBlue" Command="{markup:Locate {x:Type commanding:ExceptionHandlingCommand}}" CommandParameter="{Binding Exception}" Content="Details" ty="0" IsHitTestVisible="False" Margin="8" VerticalAlignment="Top" DockPanel.Dock="Right" />

				<TextBlock VerticalAlignment="Top" Text="{Binding Title}" Foreground="Black" TextWrapping="Wrap" Margin="0 8" />
				<ContentControl Content="{Binding Content}" Margin="8" />
			</DockPanel>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="DefaultGroup">
					<VisualState x:Name="DefaultState" />
					<VisualState x:Name="Exception">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="DisplayExceptionDetails" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0" />
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisplayExceptionDetails" Storyboard.TargetProperty="IsHitTestVisible">
								<DiscreteObjectKeyFrame KeyTime="00:00:00.00">
									<DiscreteObjectKeyFrame.Value>
										<system:Boolean>True</system:Boolean>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<i:Interaction.Behaviors>
				<si:DataStateSwitchBehavior Binding="{Binding Status}">
					<si:DataStateSwitchCase Value="None" State="DefaultState" />
					<si:DataStateSwitchCase Value="Executing" State="DefaultState" />
					<si:DataStateSwitchCase Value="CompletedWithException" State="Exception" />
				</si:DataStateSwitchBehavior>
			</i:Interaction.Behaviors>
		</Border>
	</DataTemplate>-->
</ResourceDictionary>