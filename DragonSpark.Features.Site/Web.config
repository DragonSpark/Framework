<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <!--<sectionGroup name="system.serviceModel">
      <section name="domainServices" allowDefinition="MachineToApplication" requirePermission="false" type="System.ServiceModel.DomainServices.Hosting.DomainServicesSection, System.ServiceModel.DomainServices.Hosting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </sectionGroup>-->
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging" />
    <!--<section name="facebookSettings" type="Facebook.FacebookConfigurationSection, Facebook" />-->
    <!--<section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />-->
  </configSections>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.505.0" newVersion="2.1.505.0" />
      </dependentAssembly>
      <!--<dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>-->
    </assemblyBinding>
  </runtime>
  <!--<facebookSettings appId="273034136096070" appSecret="347bad3c8e8fa6f1ff100e76a84bd755" />-->
  <connectionStrings>
    <remove name="LocalSqlServer" />
    <add name="FeaturesEntityStorage" connectionString="Data Source=.\SqlExpress;Initial Catalog=DragonSpark-Features-Storage;Trusted_Connection=True" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <appSettings>
    <add key="DragonSpark.Application.Presentation.Entity.Security.AuthenticationStatusMonitor.LoginUri" value="https://dragonspark.accesscontrol.windows.net:443/v2/wsfederation?wa=wsignin1.0&amp;wtrealm=http%3a%2f%2fdevelopment.framework.dragonspark.us%2f" />
    <add key="FederationMetadataLocation" value="https://dragonspark.accesscontrol.windows.net/FederationMetadata/2007-06/FederationMetadata.xml" />
  </appSettings>
  <!--
    For a description of web.config changes for .NET 4.5 see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime requestValidationMode="4.5" targetFramework="4.5" encoderType="System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      </system.Web>

    The following values can be added to <appSettings>.
      <appSettings>
        <add key="ValidationSettings:UnobtrusiveValidationMode" value="WebForms" />
        <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
      </appSettings>
    -->
  <system.web>
    <httpRuntime requestValidationMode="2.0" />
    <customErrors mode="Off" />
    <compilation debug="true" targetFramework="4.5">
      <assemblies>
        <add assembly="Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <roleManager defaultProvider="SecurityStorageRoleProvider" enabled="true">
      <providers>
        <remove name="AspNetSqlRoleProvider" />
        <add name="SecurityStorageRoleProvider" type="DragonSpark.Application.Communication.Security.SecurityStorageRoleProvider, DragonSpark, Version=1.0.0.0, Culture=neutral" userType="DragonSpark.Features.Entity.User, DragonSpark.Features" />
      </providers>
    </roleManager>
    <authentication mode="None" />
    <!--<authentication mode="Forms">
      <forms name=".Features.Application_ASPXAUTH" />
    </authentication>-->
    <profile enabled="false" />
    <pages controlRenderingCompatibilityVersion="4.0" />
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="ServiceLocation" type="DragonSpark.Application.Communication.LauncherModule`1[[DragonSpark.Features.Site.Launcher, DragonSpark.Features.Site, Version=1.1.0.0, Culture=neutral]], DragonSpark" />
      <add name="AuthenticationModule" type="DragonSpark.Application.Communication.Security.AuthenticationModule, DragonSpark, Version=1.0.0.0, Culture=neutral" preCondition="managedHandler" />
      <add name="SessionAuthenticationModule" type="DragonSpark.Application.Communication.Security.SessionAuthenticationModule, DragonSpark, Version=1.0.0.0, Culture=neutral" preCondition="managedHandler" />
      <add name="DomainServiceModule" preCondition="managedHandler" type="System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule, System.ServiceModel.DomainServices.Hosting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </modules>
  </system.webServer>
  <!-- BEGIN ENTERPRISE LIBRARY CONFIGURATION: -->
  <exceptionHandling>
    <exceptionPolicies>
      <add name="Default Exception Policy">
        <exceptionTypes>
          <add name="Exception" postHandlingAction="None" type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
            <exceptionHandlers>
              <add name="Logging Handler" eventId="101" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" logCategory="Critical" priority="0" severity="Error" title="Unhandled Hello World Exception" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" />
              <!--Add this handler to send the Exception ID (Guid) to the client for future sync up with the logged ID-->
              <add name="WrapHandler" exceptionMessage="{handlingInstanceID}" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" wrapExceptionType="System.ApplicationException, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Logging Policy">
        <exceptionTypes>
          <add name="Exception" postHandlingAction="None" type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
            <exceptionHandlers>
              <!-- Write to Critical Log: -->
              <add name="Critical Logging Handler" eventId="101" formatterType="DragonSpark.Application.Logging.TextExceptionFormatter, DragonSpark" logCategory="Critical" priority="0" severity="Error" title="Hello World Application Exception" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" />
              <!-- Wrap and write to InformationLog: -->
              <add name="WrapHandler" exceptionMessage="An exception has occured.  Please see Event Viewer for additional details. Handling Reference ID: {handlingInstanceID}" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" wrapExceptionType="DragonSpark.Application.Logging.LoggingInformationException, DragonSpark" />
              <add name="Information Logging Handler" eventId="101" formatterType="DragonSpark.Application.Logging.ExceptionInformationFormatter, DragonSpark" logCategory="Information" priority="0" severity="Information" title="Exception" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="WCF Exception Shielding">
        <exceptionTypes>
          <add name="Exception" postHandlingAction="ThrowNewException" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
            <exceptionHandlers>
              <add name="Logging Handler" eventId="101" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" logCategory="Critical" priority="0" severity="Error" title="Unhandled Hello World Exception" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" />
              <add name="Replace Handler" exceptionMessage="The operation you are attempting to perform is temporarily unavailable. Please try again later.  Instance ID: {handlingInstanceID}" replaceExceptionType="System.ApplicationException, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />
              <add name="DefaultFaultContract Handler" faultContractType="System.ApplicationException, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF.FaultContractExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Exception Reporting">
        <exceptionTypes>
          <add name="Exception" postHandlingAction="None" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
            <exceptionHandlers>
              <add name="Critical Logging Handler" eventId="101" formatterType="DragonSpark.Application.Logging.TextExceptionFormatter, DragonSpark" logCategory="Critical" priority="0" severity="Error" title="Hello World Application Exception" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <loggingConfiguration defaultCategory="Information" logWarningsWhenNoCategoriesMatch="false" tracingEnabled="true">
    <categorySources>
      <add name="Information" switchValue="Information">
        <listeners>
          <add name="Custom Listener" />
        </listeners>
      </add>
      <add name="Critical" switchValue="Warning">
        <listeners>
          <add name="EventLog Listener" />
          <add name="Custom Listener" />
        </listeners>
      </add>
      <add name="Tracing" switchValue="ActivityTracing">
        <listeners>
          <add name="Tracing Custom Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents name="All Events" switchValue="All" />
      <notProcessed name="Unprocessed Category" switchValue="All" />
      <errors name="Logging Errors &amp; Warnings" switchValue="All">
        <listeners>
          <add name="EventLog Listener" />
        </listeners>
      </errors>
    </specialSources>
    <listeners>
      <!-- Custom Listener -->
      <add name="Custom Listener" formatter="Text Formatter" initializeData="" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.CustomTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" traceOutputOptions="None" type="DragonSpark.Application.Logging.TraceListener, DragonSpark" />
      <!-- Tracing Custom Listener -->
      <add name="Tracing Custom Listener" formatter="Tracing Text Formatter" initializeData="" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.CustomTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" traceOutputOptions="None" type="DragonSpark.Application.Logging.TraceListener, DragonSpark" />
      <!-- EventLog Listener -->
      <add name="EventLog Listener" filter="All" formatter="Verbose Text Formatter" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" log="Application" machineName="" source="The DragonSpark Application Framework - Featureset Application" traceOutputOptions="None" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" />
    </listeners>
    <formatters>
      <add name="Text Formatter" template="[{timestamp}] - {formatExtendedProperty(Context:Name)} - {message} (Category: {category})" type="DragonSpark.Application.Logging.TextFormatter, DragonSpark" />
      <add name="Tracing Text Formatter" template="[{timestamp}] - {formatExtendedProperty(Context:Name)} - {message} (Category: {category}  Machine: {machine})" type="DragonSpark.Application.Logging.TextFormatter, DragonSpark" />
      <add name="Verbose Text Formatter" template="Timestamp: {timestamp}&#xA;Message: {message}&#xA;Category: {category}&#xA;Priority: {priority}&#xA;EventId: {eventid}&#xA;Severity: {severity}&#xA;Title:{title}&#xA;Machine: {machine}&#xA;Application Domain: {appDomain}&#xA;Bind Id: {processId}&#xA;Bind Name: {processName}&#xA;Win32 Thread Id: {win32ThreadId}&#xA;Thread Name: {threadName}&#xA;Extended Properties: {dictionary({key} - {value}&#xA;)}" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging" />
    </formatters>
  </loggingConfiguration>
  <!-- END ENTERPRISE LIBRARY CONFIGURATION. -->
  <system.serviceModel>
    <client />
    <bindings />
    <services>
      <service name="DragonSpark.Features.FeaturesApplicationService">
        <endpoint address="" binding="basicHttpBinding" contract="DragonSpark.Features.IFeaturesApplicationService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="" binding="basicHttpBinding" contract="DragonSpark.Application.IApplicationService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <ServiceLocation factoryType="DragonSpark.Features.Site.Launcher, DragonSpark.Features.Site" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="ServiceLocation" type="DragonSpark.Application.Communication.Configuration.HttpApplicationServiceLocationElement, DragonSpark" />
      </behaviorExtensions>
    </extensions>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <microsoft.identityModel>
    <service>
      <audienceUris>
        <add value="http://development.framework.dragonspark.us/" />
      </audienceUris>
      <federatedAuthentication>
        <wsFederation passiveRedirectEnabled="true" issuer="https://dragonspark.accesscontrol.windows.net/v2/wsfederation" realm="http://development.framework.dragonspark.us/" requireHttps="false" />
        <cookieHandler requireSsl="false" hideFromScript="false" />
      </federatedAuthentication>
      <applicationService>
        <claimTypeRequired>
          <!--Following are the claims offered by STS 'https://dragonspark.accesscontrol.windows.net/'. Add or uncomment claims that you require by your application and then update the federation metadata of this application.-->
          <claimType type="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name" optional="true" />
          <claimType type="http://schemas.microsoft.com/ws/2008/06/identity/claims/role" optional="true" />
          <claimType type="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier" optional="true" />
          <claimType type="http://schemas.microsoft.com/accesscontrolservice/2010/07/claims/identityprovider" optional="true" />
        </claimTypeRequired>
      </applicationService>
      <securityTokenHandlers>
        <add type="Microsoft.IdentityModel.Tokens.SessionSecurityTokenHandler, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
          <sessionTokenRequirement lifetime="0.18:00:00" />
        </add>
      </securityTokenHandlers>
      <issuerNameRegistry type="Microsoft.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
        <trustedIssuers>
          <add thumbprint="485212C897628F9EAA32A5643395AD8D32C5239E" name="https://dragonspark.accesscontrol.windows.net/" />
        </trustedIssuers>
      </issuerNameRegistry>
      <certificateValidation certificateValidationMode="None" />
    </service>
  </microsoft.identityModel>
</configuration>