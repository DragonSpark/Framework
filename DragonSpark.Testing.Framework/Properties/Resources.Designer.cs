//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DragonSpark.Testing.Framework.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DragonSpark.Testing.Framework.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to the path &apos;{0}&apos; is denied..
        /// </summary>
        internal static string ACCESS_TO_THE_PATH_IS_DENIED {
            get {
                return ResourceManager.GetString("ACCESS_TO_THE_PATH_IS_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a part of the path &apos;{0}&apos;..
        /// </summary>
        internal static string COULD_NOT_FIND_PART_OF_PATH_EXCEPTION {
            get {
                return ResourceManager.GetString("COULD_NOT_FIND_PART_OF_PATH_EXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name cannot be null..
        /// </summary>
        internal static string FILENAME_CANNOT_BE_NULL {
            get {
                return ResourceManager.GetString("FILENAME_CANNOT_BE_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal characters in path..
        /// </summary>
        internal static string ILLEGAL_CHARACTERS_IN_PATH_EXCEPTION {
            get {
                return ResourceManager.GetString("ILLEGAL_CHARACTERS_IN_PATH_EXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This test helper hasn&apos;t been implemented yet. They are implemented on an as-needed basis. As it seems like you need it, now would be a great time to send us a pull request over at https://github.com/tathamoddie/System.IO.Abstractions. You know, because it&apos;s open source and all..
        /// </summary>
        internal static string NOT_IMPLEMENTED_EXCEPTION {
            get {
                return ResourceManager.GetString("NOT_IMPLEMENTED_EXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path cannot be the empty string or all whitespace..
        /// </summary>
        internal static string PATH_CANNOT_BE_THE_EMPTY_STRING_OR_ALL_WHITESPACE {
            get {
                return ResourceManager.GetString("PATH_CANNOT_BE_THE_EMPTY_STRING_OR_ALL_WHITESPACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path is not of a legal form..
        /// </summary>
        internal static string THE_PATH_IS_NOT_OF_A_LEGAL_FORM {
            get {
                return ResourceManager.GetString("THE_PATH_IS_NOT_OF_A_LEGAL_FORM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value cannot be null..
        /// </summary>
        internal static string VALUE_CANNOT_BE_NULL {
            get {
                return ResourceManager.GetString("VALUE_CANNOT_BE_NULL", resourceCulture);
            }
        }
    }
}
