<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  xmlns:Controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit"
					xmlns:ds="http://framework.dragonspark.us"
					xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
					xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
					xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
					xmlns:Interactivity="clr-namespace:Expression.Samples.Interactivity;assembly=Expression.Samples.Interactivity"
					xmlns:ApplicationServices="clr-namespace:System.ServiceModel.DomainServices.Client.ApplicationServices;assembly=System.ServiceModel.DomainServices.Client.Web"
					xmlns:Entity="clr-namespace:DragonSpark.Features.Entity;assembly=DragonSpark.Features.Client"
					xmlns:Features="clr-namespace:DragonSpark.Features;assembly=DragonSpark.Features.Client"
					xmlns:Security="clr-namespace:DragonSpark.Application.Communication.Security;assembly=DragonSpark.Features.Client">
	<!--<DataTemplate x:Key="Copyright" DataType="Application:ApplicationDetails">
		<Controls:DockPanel>
			<TextBlock Text="{Binding OriginalLaunchDate, StringFormat='© {0} ', Converter={StaticResource YearRangeConverter}}" />
			<TextBlock Text="{Binding Company}" />
			<TextBlock Text=".  All Rights Reserved." />
		</Controls:DockPanel>
	</DataTemplate>-->

	<DataTemplate DataType="ds:ViewLocation">
		<HyperlinkButton NavigateUri="{Binding Location}" Foreground="Black" TargetName="{Binding TargetName}">
			<TextBlock Text="{Binding Title}" Margin="15 0" FontFamily="Verdana" FontSize="15" FontWeight="Bold" />
		</HyperlinkButton>
	</DataTemplate>

	<DataTemplate DataType="Entity:RolesField">
		<ds:BusyIndicator x:Name="LayoutRoot" Background="White" BusyContent="{ds:Locate TypeName=ds:ICommandMonitor}">
			<ds:BusyIndicator.Resources>
				<ds:DomainCollectionViewSource x:Key="Source" DomainContext="{ds:Locate TypeName=Features:SecurityEntityContext}" EntityType="{ds:Type TypeName=Security:Role}" EnableAutomaticLoading="False" />
			</ds:BusyIndicator.Resources>
			<i:Interaction.Behaviors>
				<ds:DataFieldBinding Value="{Binding Value, Mode=TwoWay}" />
				<ds:DataStateBehavior Binding="{Binding SourceItems.Count, Converter={ds:Static Member=ds:CountConverter.CountConverterInstance}, ConverterParameter=True}" TrueState="DefaultState" FalseState="NoItemsFoundState" Value="True" />
			</i:Interaction.Behaviors>
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Ready" SourceObject="{StaticResource Source}">
					<ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="View" Value="{Binding View, Source={StaticResource Source}}" />
					<ds:InvokeCommandAction Command="{ds:Locate TypeName=ds:DomainCollectionViewRefreshCommand}" CommandParameter="{Binding View}" />
				</i:EventTrigger>
				<i:EventTrigger EventName="Loading" SourceObject="{StaticResource Source}">
					<ds:InvokeCommandAction>
						<ds:Command.Attach>
							<ds:LoadSourceOperation Context="{StaticResource Source}" Title="Retrieving Roles">
								<ds:QueryDefinition QueryName="RetrieveRoles" />
							</ds:LoadSourceOperation>
						</ds:Command.Attach>
					</ds:InvokeCommandAction>
				</i:EventTrigger>
				<i:EventTrigger SourceObject="{StaticResource Source}" EventName="LoadComplete">
					<ei:CallMethodAction TargetObject="{Binding}" MethodName="Refresh" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
			<VisualStateManager.CustomVisualStateManager>
				<ds:ExtendedVisualStateManager />
			</VisualStateManager.CustomVisualStateManager>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="DefaultVisalGroup">
					<VisualState x:Name="DefaultState" />
					<VisualState x:Name="NoItemsFoundState">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NoItemsMessage">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Items">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Grid>
				<TextBlock x:Name="NoItemsMessage" Text="No Roles Found within this Application (have they been created?)." Visibility="Collapsed" />

				<ItemsControl x:Name="Items" ItemsSource="{Binding SourceItems}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<CheckBox Content="{Binding Source.Name}" Margin="4" IsChecked="{Binding IsIncluded, Mode=TwoWay}" />
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Grid>
		</ds:BusyIndicator>
	</DataTemplate>

	<DataTemplate DataType="ds:ProfileValidationConfirmation">
		<ds:BusyIndicator x:Name="LayoutRoot" BusyContent="{ds:Locate TypeName=ds:ICommandMonitor}">
			<ds:BusyIndicator.DataContext>
				<ds:DomainCollectionViewSource DomainContext="{ds:Locate TypeName=ApplicationServices:AuthenticationDomainContextBase}" EntityType="{ds:Type TypeName=Entity:User}" PageSize="0" />
			</ds:BusyIndicator.DataContext>
			<i:Interaction.Triggers>
				<!--<ds:BindingTrigger Binding="{Binding View}">
					<ds:InvokeCommandAction Command="{ds:Locate TypeName=ds:DomainCollectionViewRefreshCommand}" CommandParameter="{Binding View}" />
				</ds:BindingTrigger>-->
				<i:EventTrigger EventName="Loading" SourceObject="{Binding}">
					<ds:InvokeCommandAction>
						<ds:Command.Attach>
							<ds:LoadSourceOperation Context="{ds:ApplyBinding Binding={Binding}}">
								<ds:QueryDefinition QueryName="GetUser" />
							</ds:LoadSourceOperation>
						</ds:Command.Attach>
					</ds:InvokeCommandAction>
				</i:EventTrigger>
			</i:Interaction.Triggers>
			<toolkit:DataForm ItemsSource="{Binding View}" AutoEdit="True" CommandButtonsVisibility="Commit" AutoCommit="False">
				<toolkit:DataForm.Header>
					<TextBlock Text="Welcome!  Please Complete Your Profile" Style="{StaticResource TextHeader}" Margin="0 10" />
				</toolkit:DataForm.Header>
				<i:Interaction.Behaviors>
					<ds:DataFormCompensations x:Name="Compensations" FocusedFieldIndex="0" />
					<ds:DisplayFieldView FieldViewName="Profile" />
					<ds:PreserveChanges />
					<ds:PreserveChangesDialog Message="Your profile currently has pending changes.  Continuing will lose these changes.  Continue and lose your current changes?" />
					<ds:EntityDataBehavior Behaviors="{Binding EntityType, Converter={ds:Static Member=ds:EntityDataBehaviorConverter.Instance}}" />
				</i:Interaction.Behaviors>
				<i:Interaction.Triggers>
					<i:EventTrigger SourceObject="{Binding ElementName=Compensations}" EventName="Submitted">
						<ds:InvokeCommandAction x:Name="SubmitCommandAction">
							<ds:Command.Attach>
								<ds:SubmitSourceOperation Context="{ds:ApplyBinding Binding={Binding}}" Title="Updating Profile" />
							</ds:Command.Attach>
						</ds:InvokeCommandAction>
					</i:EventTrigger>
					<i:EventTrigger SourceObject="{Binding Command, ElementName=SubmitCommandAction}" EventName="Completed">
						<ei:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ds:ChildWindow}}" MethodName="Close" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</toolkit:DataForm>
		</ds:BusyIndicator>
	</DataTemplate>

	<DataTemplate DataType="ds:ExceptionNotification">
		<ds:BusyIndicator x:Name="LayoutRoot" BusyContent="{ds:Locate TypeName=ds:ICommandMonitor}">
			<VisualStateManager.CustomVisualStateManager>
				<ds:ExtendedVisualStateManager />
			</VisualStateManager.CustomVisualStateManager>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="ReportStates">
					<VisualState x:Name="DefaultReport" />
					<VisualState x:Name="Reported">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>

				<VisualStateGroup x:Name="ExceptionTypeStates">
					<VisualState x:Name="DefaultExceptionTypeState" />
					<VisualState x:Name="ServerExceptionTypeState">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="Description">
								<DiscreteObjectKeyFrame KeyTime="0" Value="This exception was thrown from a remote service process.  A message is provided below on the details of the exception.  Since this is a service exception, it has been logged on the service domain and no further action should be taken at this time." />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ReportException">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Grid>
				<i:Interaction.Behaviors>
					<ds:DataStateBehavior Binding="{Binding IsServerException}" TrueState="ServerExceptionTypeState" FalseState="DefaultExceptionTypeState" Value="True" />
				</i:Interaction.Behaviors>
				<Controls:DockPanel>
					<TextBlock x:Name="Description" Controls:DockPanel.Dock="Top" TextWrapping="Wrap" Margin="0 0 0 8" Text="This application has encountered an unexpected exception.  You can report this exception by selecting 'Report Exception' below." />

					<TextBlock x:Name="Message" Controls:DockPanel.Dock="Top" TextWrapping="Wrap" Margin="0 0 0 8" FontWeight="Bold" Width="{Binding ActualWidth, ElementName=Details}" HorizontalAlignment="Left" />

					<TextBlock TextWrapping="Wrap" Controls:DockPanel.Dock="Top"  Margin="0 0 0 4" Text="Error Details:" HorizontalAlignment="Left" />

					<Controls:DockPanel Controls:DockPanel.Dock="Bottom" Margin="0 4 0 8">
						<i:Interaction.Triggers>
							<Interactivity:DataTrigger Binding="{Binding CommandParameter.Status, ElementName=ReportException}" Value="Completed">
								<ds:GoToState StateName="Reported" TargetName="LayoutRoot" />
							</Interactivity:DataTrigger>
						</i:Interaction.Triggers>
						<Button x:Name="ReportException" Content="Report Exception" Margin="2 0 0 0" MinWidth="60" Padding="10 2" Controls:DockPanel.Dock="Right">
							<ds:Command.Attach>
								<ds:ExecuteCommandSetCommand>
									<ds:Locate TypeName="ds:ReportExceptionCommand">
										<ds:BindingPropertySetter PropertyName="Context" Value="{Binding Exception}" />
									</ds:Locate>
								</ds:ExecuteCommandSetCommand>
							</ds:Command.Attach>
						</Button>
						<toolkit:TransitioningContentControl x:Name="ContentContainer" HorizontalContentAlignment="Stretch">
							<VisualStateManager.CustomVisualStateManager>
								<ds:ExtendedVisualStateManager />
							</VisualStateManager.CustomVisualStateManager>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="ContentStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="Highlight">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Content">
												<DiscreteObjectKeyFrame KeyTime="00:00:00.00">
													<DiscreteObjectKeyFrame.Value>
														<Grid x:Name="Content" Background="Transparent">
															<Grid.Resources>
																<Storyboard x:Key="Highlight">
																	<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)">
																		<LinearColorKeyFrame KeyTime="00:00:00.00" Value="Transparent" />
																		<LinearColorKeyFrame KeyTime="00:00:01.00" Value="Yellow" />
																		<LinearColorKeyFrame KeyTime="00:00:01.50" Value="Transparent" />
																	</ColorAnimationUsingKeyFrames>
																</Storyboard>
															</Grid.Resources>
															<i:Interaction.Triggers>
																<ei:TimerTrigger EventName="Loaded" TotalTicks="1" MillisecondsPerTick="1500">
																	<ds:GoToState StateName="Normal" TargetName="ContentContainer" />
																</ei:TimerTrigger>
																<i:EventTrigger EventName="Loaded">
																	<ds:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource Highlight}" />
																</i:EventTrigger>
															</i:Interaction.Triggers>
															<TextBlock Text="Details Copied!" />
														</Grid>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<HyperlinkButton Command="{ds:Locate TypeName=ds:CopyToClipboardCommand}" CommandParameter="{Binding Details}" Content="Copy Details to Clipboard">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ds:GoToState StateName="Highlight" TargetName="ContentContainer" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</HyperlinkButton>
						</toolkit:TransitioningContentControl>
					</Controls:DockPanel>
					<TextBox x:Name="Details" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" Controls:DockPanel.Dock="Top" Margin="0 0 0 4" Text="{Binding Details}" />
				</Controls:DockPanel>
				<Border x:Name="border" Background="White" BorderBrush="Black" BorderThickness="2" Visibility="Collapsed">
					<Controls:DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
						<StackPanel Margin="10">
							<TextBlock Text="Exception Reported" FontWeight="Bold" />
							<TextBlock Text="Thank you for taking the time to report.  Your exception was reported successfully and has been logged in the administrative logs." Margin="10 5 10 10" TextWrapping="Wrap" />
							<HyperlinkButton Content="Close" HorizontalAlignment="Right" Padding="10 5" FontWeight="Bold">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ds:GoToState StateName="DefaultReport" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</HyperlinkButton>
						</StackPanel>
					</Controls:DockPanel>
				</Border>
			</Grid>
		</ds:BusyIndicator>

	</DataTemplate>
</ResourceDictionary>
