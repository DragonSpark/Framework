<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:ds="http://framework.dragonspark.us"
	xmlns:si="clr-namespace:Microsoft.Expression.Interactions.Extensions;assembly=Microsoft.Expression.Interactions.Extensions"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:modernui="clr-namespace:FirstFloor.ModernUI;assembly=FirstFloor.ModernUI"
	xmlns:mui="http://firstfloorsoftware.com/ModernUI"
	xmlns:rendering="clr-namespace:DragonSpark.Application.Client.Forms.Rendering"
	xmlns:presentation="clr-namespace:DragonSpark.Application.Client.Presentation;assembly=DragonSpark.Application.Client"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:forms="clr-namespace:Xamarin.Forms;assembly=Xamarin.Forms.Core"
	mc:Ignorable="d" 
	xmlns:interaction="clr-namespace:DragonSpark.Application.Client.Forms.Interaction"
	xmlns:defaultPopupWindows="clr-namespace:Prism.Interactivity.DefaultPopupWindows;assembly=Prism.Interactivity">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/DragonSpark.Application.Client;component/Themes/Generic.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<Style x:Key="ChromeButtonStyle" TargetType="{x:Type Button}">
		<Style.Resources>
			<Storyboard x:Key="OnMouseDownStoryboard">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
					<EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="OnMouseUpStoryboard">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
					<EasingDoubleKeyFrame KeyTime="0" Value="1" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
		</Style.Resources>
		<Setter Property="FontFamily" Value="{StaticResource WinFontFamilyNormal}"/>
		<Setter Property="FontSize" Value="{StaticResource WinFontSizeNormal}"/>
		<Setter Property="Foreground" Value="{StaticResource WinForegroundBrush}"/>
		<Setter Property="Background" Value="#00000000" />
		<Setter	Property="BorderBrush" Value="{x:Null}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template" Value="{StaticResource ChromeButtonControlTemplate}" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.5" />
			</Trigger>
			<EventTrigger RoutedEvent="Mouse.PreviewMouseDown">
				<BeginStoryboard x:Name="OnMouseDown_BeginStoryboard" Storyboard="{StaticResource OnMouseDownStoryboard}" />
			</EventTrigger>
			<EventTrigger RoutedEvent="Mouse.PreviewMouseUp">
				<BeginStoryboard x:Name="OnMouseUp_BeginStoryboard" Storyboard="{StaticResource OnMouseUpStoryboard}" />
			</EventTrigger>
		</Style.Triggers>
	</Style>

	<DataTemplate x:Key="ToolbarItemImage" DataType="{x:Type forms:ToolbarItem}">
		<ds:ApplicationBarIconButton ImageSource="{Binding Item.Value, ElementName=Image}" Content="{Binding Text}" Command="{x:Static rendering:ExecuteToolbarItemCommand.Instance}" CommandParameter="{Binding}">
			<i:Interaction.Behaviors>
				<ds:BindingHost x:Name="Image" Item="{Binding Icon, Converter={x:Static rendering:ImageConverter.Instance}}" />
			</i:Interaction.Behaviors>
		</ds:ApplicationBarIconButton>
	</DataTemplate>

	<DataTemplate DataType="{x:Type forms:ToolbarItem}">
		<ds:ApplicationBarMenuItem Content="{Binding Text}" IsEnabled="{Binding IsEnabled}" Command="{x:Static rendering:ExecuteToolbarItemCommand.Instance}" CommandParameter="{Binding}" />
	</DataTemplate>
	
	
	<Style TargetType="ds:ApplicationBarIconButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ds:ApplicationBarIconButton">
					<DockPanel x:Name="LayoutRoot" ToolTip="{TemplateBinding Content}">
						<TextBlock x:Name="Text" DockPanel.Dock="Bottom" Text="{TemplateBinding Content}" HorizontalAlignment="Center" Style="{StaticResource WinTextSmallStyle}" Focusable="{TemplateBinding Focusable}" Visibility="Collapsed" TextWrapping="Wrap" Width="{Binding ActualWidth, ElementName=Button}" TextAlignment="Center" />
						<Button x:Name="Button" Style="{StaticResource ChromeButtonStyle}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" CommandTarget="{TemplateBinding CommandTarget}" Margin="12 0" Focusable="{TemplateBinding Focusable}" IsCancel="{TemplateBinding IsCancel}" IsDefault="{TemplateBinding IsDefault}">
							<Image Stretch="UniformToFill" Width="{StaticResource ApplicationBarIconSize}" Height="{StaticResource ApplicationBarIconSize}" Source="{Binding ImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
						</Button>
					</DockPanel>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding MenuState, RelativeSource={RelativeSource AncestorType=ds:ApplicationBar}}" Value="{x:Static Visibility.Visible}">
							<DataTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Hidden}" />
											<DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.ExitActions>
							<Setter TargetName="LayoutRoot" Property="ToolTip" Value="{x:Null}" />
							<!--<Setter TargetName="Text" Property="Visibility" Value="{x:Static Visibility.Visible}" />-->
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ds:ApplicationBarMenuItem">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ds:ApplicationBarMenuItem">
					<Border BorderThickness="1">
						<Button HorizontalAlignment="Left" Style="{StaticResource ChromeButtonStyle}" Margin="{StaticResource WinVerticalMargin}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" CommandTarget="{TemplateBinding CommandTarget}" Visibility="{Binding MenuState, RelativeSource={RelativeSource AncestorType=ds:ApplicationBar}}">
							<TextBlock HorizontalAlignment="Left" Style="{StaticResource WinTextTitle3Style}" Text="{TemplateBinding Content}" />
						</Button>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ds:ApplicationBar">
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ds:ApplicationBar">
					<Canvas x:Name="LayoutRoot" ClipToBounds="True" Height="0" VerticalAlignment="Bottom">
						<Border x:Name="MainContent" Background="{StaticResource WinChromeBrush}" Width="{TemplateBinding ActualWidth}" MinHeight="75">
							<Border.Resources>
								<Storyboard x:Key="MenuMinimal">
									<DoubleAnimation Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(FrameworkElement.Height)" To="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" Duration="0:0:00.25">
										<DoubleAnimation.EasingFunction>
											<ExponentialEase EasingMode="EaseOut" />
										</DoubleAnimation.EasingFunction>
									</DoubleAnimation>
								</Storyboard>
								<Storyboard x:Key="MenuFull">
									<DoubleAnimation Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(FrameworkElement.Height)" To="{Binding ActualHeight, ElementName=MainContent}" Duration="0:0:00.25">
										<DoubleAnimation.EasingFunction>
											<ExponentialEase EasingMode="EaseOut" />
										</DoubleAnimation.EasingFunction>
									</DoubleAnimation>
								</Storyboard>
							</Border.Resources>
							<VisualStateManager.CustomVisualStateManager>
								<ei:ExtendedVisualStateManager />
							</VisualStateManager.CustomVisualStateManager>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="MenuStates">
									<VisualState x:Name="MenuDefault" />
									<VisualState x:Name="MenuMinimal" Storyboard="{StaticResource MenuMinimal}" />
									<VisualState x:Name="MenuFull" Storyboard="{StaticResource MenuFull}" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="Body" Margin="12 6">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>

								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<ItemsPresenter x:Name="Presenter" Grid.Column="1" />

								<Button x:Name="MenuButton" Grid.Row="0" Grid.Column="2" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{StaticResource ChromeButtonStyle}" Margin="3" Command="{x:Static ds:DisplayApplicationBarCommand.Instance}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
									<Image Source="/DragonSpark.Application.Client;component/Themes/appbar.overflowdots.png" Stretch="UniformToFill" Width="{StaticResource ApplicationBarIconSize}" Height="{StaticResource ApplicationBarIconSize}" />
								</Button>

								<ItemsControl x:Name="MenuItemPanel" ItemsSource="{TemplateBinding MenuItemsSource}" ItemTemplate="{TemplateBinding MenuItemTemplate}" HorizontalAlignment="Left" Grid.ColumnSpan="3" Grid.Column="0" Grid.Row="1" />
							</Grid>
							<i:Interaction.Behaviors>
								<si:DataStateSwitchBehavior Binding="{Binding MenuState, RelativeSource={RelativeSource TemplatedParent}}">
									<si:DataStateSwitchCase Value="Collapsed" State="MenuDefault" />
									<si:DataStateSwitchCase Value="Hidden" State="MenuMinimal" />
									<si:DataStateSwitchCase Value="Visible" State="MenuFull" />
								</si:DataStateSwitchBehavior>
							</i:Interaction.Behaviors>
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Loaded">
									<ei:GoToStateAction StateName="MenuMinimal" />
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</Border>
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Dialog" TargetType="mui:ModernDialog">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="mui:ModernDialog">
					<Border Background="{DynamicResource WindowBackground}" Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}">
						<i:Interaction.Behaviors>
							<interaction:CloseOnReturningBehavior />
						</i:Interaction.Behaviors>
						<Grid>
							<Border BorderBrush="{DynamicResource WindowBorder}" BorderThickness="1">
								<AdornerDecorator>
									<Grid>
										<!-- window background content -->
										<ContentControl Content="{TemplateBinding BackgroundContent}" />

										<!-- top blob -->
										<Canvas>
											<Rectangle Fill="{DynamicResource Accent}" Canvas.Top="18" Canvas.Left="24" Width="100" Height="6" />
										</Canvas>

										<Grid Margin="24 24 24 0">
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto" />
												<RowDefinition Height="*" />
												<!--<RowDefinition Height="Auto" />-->
											</Grid.RowDefinitions>

											<!-- title -->
											<TextBlock DataContext="{TemplateBinding Title}" Text="{Binding Converter={StaticResource ToUpperConverter}}" 
												   FontFamily="Segoe UI"
												   FontSize="24"
												   TextOptions.TextFormattingMode="Ideal"
												   TextTrimming="CharacterEllipsis" />

											<!-- content -->
											<mui:TransitioningContentControl Grid.Row="1" Margin="0,20" Content="{TemplateBinding Content}" />

											<!-- buttons -->
											<!--<ItemsControl Grid.Row="2" ItemsSource="{TemplateBinding Buttons}" HorizontalAlignment="Right">
													<ItemsControl.ItemsPanel>
														<ItemsPanelTemplate>
															<StackPanel Orientation="Horizontal" />
														</ItemsPanelTemplate>
													</ItemsControl.ItemsPanel>
												</ItemsControl>-->
										</Grid>
									</Grid>
								</AdornerDecorator>
							</Border>
							<Border BorderBrush="{DynamicResource WindowBorderActive}" BorderThickness="1" Visibility="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>